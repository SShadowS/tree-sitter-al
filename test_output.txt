  EmptyCodeblock:
      1. âœ“ [32mEmpty Code Block Test[0m[31m -- Warning: Slow parse rate (1000.700 bytes/ms)[0m
  about_properties_in_fields:
      2. âœ“ [32mField with AboutTitle and AboutText properties[0m[31m -- Warning: Slow parse rate (7594.171 bytes/ms)[0m
      3. âœ“ [32mField with AboutTitle and AboutText ML properties[0m
      4. âœ“ [32mStandard field with AboutTitle and AboutText properties[0m
  access_by_permission_all_object_types_test:
      5. âœ“ [32mAccessByPermission property with all object types test[0m
  access_by_permission_case_variations_test:
      6. âœ“ [32mAccessByPermission property case variations test[0m
  access_by_permission_property_test:
      7. âœ“ [32mAccessByPermission property in action declarations[0m[31m -- Warning: Slow parse rate (6867.894 bytes/ms)[0m
      8. âœ“ [32mAccessByPermission property with quoted table name[0m
      9. âœ“ [32mAccessByPermission property in field sections[0m
     10. âœ“ [32mAccessByPermission property with different permission types[0m
  access_by_permission_system_objects_test:
     11. âœ“ [32mAccessByPermission property with System objects test[0m
  action_group_preprocessor_test:
     12. âœ“ [32mAction group with preprocessor conditional actionref[0m
     13. âœ“ [32mNested action groups with preprocessor conditionals[0m
  action_groups_and_shortcut_keys:
     14. âœ“ [32mAction groups with navigation properties and shortcut keys[0m
     15. âœ“ [32mDirect action groups in actions section[0m
  additional_search_terms_property_test:
     16. âœ“ [32mAdditionalSearchTerms property in report[0m
     17. âœ“ [32mAdditionalSearchTerms property in page[0m
     18. âœ“ [32mAdditionalSearchTermsML property test[0m
     19. âœ“ [32mReport with multiple properties including AdditionalSearchTerms[0m
  al_built_in_functions:
     20. âœ“ [32mAL Built-in Functions[0m
  allow_in_customizations_case_test:
     21. âœ“ [32mAllowInCustomizations property case variations[0m
     22. âœ“ [32mAllowInCustomizations with Never value in various contexts[0m
  allow_in_customizations_property_test:
     23. âœ“ [32mAllowInCustomizations property with Never value[0m
     24. âœ“ [32mAllowInCustomizations property with boolean value[0m
     25. âœ“ [32mAllowInCustomizations property case variations[0m
  api_group_publisher_properties_test:
     26. âœ“ [32mAPI page with APIGroup and APIPublisher properties[0m
     27. âœ“ [32mAPI page with all API-related properties[0m
     28. âœ“ [32mAPI page with mixed case properties[0m
     29. âœ“ [32mQuery with APIGroup and APIPublisher properties[0m
  api_page_properties_test:
     30. âœ“ [32mAPI page with APIVersion property[0m
     31. âœ“ [32mAPI page with beta APIVersion[0m
     32. âœ“ [32mPart with Multiplicity property[0m
     33. âœ“ [32mMultiplicity property case variations[0m
     34. âœ“ [32mComplete API page with all properties[0m
  area_sections_action_test:
     35. âœ“ [32mPage actions with area(sections) for RoleCenter pages[0m
  area_tooltip_property_test:
     36. âœ“ [32mArea section with ToolTip property - embedding[0m
     37. âœ“ [32mArea section with ToolTip property - processing[0m
     38. âœ“ [32mArea section with ToolTip and multiple actions[0m
     39. âœ“ [32mArea section without ToolTip property (backward compatibility)[0m
  area_types_comprehensive_test:
     40. âœ“ [32mComprehensive area types including new prompt areas[0m
  array_indexing:
     41. âœ“ [32mArray Indexing Expressions[0m
  array_indexing_simple:
     42. âœ“ [32mSimple Array Indexing[0m
  array_types:
     43. âœ“ [32mComplex Array Types[0m
  asserterror_assignment_test:
     44. âœ“ [32mAsserterror with assignment expression[0m
     45. âœ“ [32mMultiple asserterror assignment patterns[0m
  asserterror_statement_test:
     46. âœ“ [32mBasic asserterror statement[0m
     47. âœ“ [32mAsserterror with method call[0m
     48. âœ“ [32mAsserterror with enum value[0m
     49. âœ“ [32mAsserterror in test procedure[0m
  attribute_pragma_procedures_test:
     50. âœ“ [32mEventSubscriber attribute with pragma directives before procedure[0m
  auto_format_expression_test:
     51. âœ“ [32mAutoFormatExpression with member expressions[0m
  auto_format_type_extended_test:
     52. âœ“ [32mAutoFormatType with extended values[0m
  basic_page_triggers:
     53. âœ“ [32mBasic Page Triggers[0m
  blob_subtype_comprehensive_test:
     54. âœ“ [32mBLOB field with various SubType values[0m
     55. âœ“ [32mBLOB SubType case variations[0m
     56. âœ“ [32mSubType with custom identifier values[0m
  blob_subtype_test:
     57. âœ“ [32mBLOB field with SubType property[0m
  bom_character_support_test:
     58. âœ“ [32mByte Order Mark (BOM) character support test[0m
  built_in_functions_database:
     59. âœ“ [32mBuilt-in Functions Database[0m
  built_in_functions_date_and_time:
     60. âœ“ [32mBuilt-in Functions Date and Time[0m
  built_in_functions_math:
     61. âœ“ [32mBuilt-in Functions Math[0m
  built_in_functions_simple:
     62. âœ“ [32mBuilt-in Functions Simple[0m
  built_in_functions_string:
     63. âœ“ [32mBuilt-in Functions String[0m
  built_in_functions_user_and_session:
     64. âœ“ [32mBuilt-in Functions User and session functions[0m
  calc_fields_property_test:
     65. âœ“ [32mReport dataitem with CalcFields property[0m
     66. âœ“ [32mCalcFields with single field[0m
     67. âœ“ [32mCalcFields with multiple quoted fields[0m
  calc_formula_average:
     68. âœ“ [32mAverage Formula Test[0m
  calc_formula_count:
     69. âœ“ [32mCount Formula Test[0m
  calc_formula_lookup:
     70. âœ“ [32mLookup Formula Test[0m
  calc_formula_minmax:
     71. âœ“ [32mMin/Max Formula Test[0m
  calc_formula_negated_test:
     72. âœ“ [32mNegated CalcFormula expressions for FlowFields[0m
  calc_formula_sum:
     73. âœ“ [32mSum Formula Test[0m
  calcformula_count_without_where_test:
     74. âœ“ [32mCalcFormula count without WHERE clause[0m
     75. âœ“ [32mCalcFormula count with WHERE clause[0m
     76. âœ“ [32mCalcFormula count case variations[0m
  caption_as_variable_name_test:
     77. âœ“ [32mCaption as variable name[0m
  caption_class_label_test:
     78. âœ“ [32mCaptionClass property in label sections[0m
  caption_class_property_test:
     79. âœ“ [32mField with CaptionClass property using method call[0m
     80. âœ“ [32mField with CaptionClass property using string literal[0m
  caption_comment_lowercase_test:
     81. âœ“ [32mCaption property with lowercase comment parameter[0m
     82. âœ“ [32mCaption with different case comment variations[0m
  caption_locked_property:
     83. âœ“ [32mCaption property with Locked attribute[0m
     84. âœ“ [32mCaption property with empty string and Locked[0m
     85. âœ“ [32mCaption property with Locked false[0m
     86. âœ“ [32mCaption property without Locked attribute[0m
     87. âœ“ [32mCaption property with different case Locked attribute[0m
     88. âœ“ [32mMultiple properties with Caption and Locked[0m
  caption_property_maxlength_test:
     89. âœ“ [32mCaption property with MaxLength parameter[0m
  caption_with_comment_and_locked:
     90. âœ“ [32mCaption property with Comment and Locked parameters[0m
  case_arithmetic_expressions_test:
     91. âœ“ [32mCase statement with arithmetic expressions in patterns[0m
  case_member_access:
     92. âœ“ [32mCase with member access patterns[0m
  case_range_expressions_test:
     93. âœ“ [32mCase statement with range expressions[0m
  case_statements:
     94. âœ“ [32mCase with begin/end block branches[0m
     95. âœ“ [32mCase with string literals[0m
     96. âœ“ [32mCase with multiple patterns per branch[0m
     97. âœ“ [32mCase with else clause[0m
     98. âœ“ [32mCase with else block[0m
  case_statements_enum_qualified_values:
     99. âœ“ [32mCase statements with enum qualified values using Enum:: pattern[0m
    100. âœ“ [32mSimple enum case pattern test[0m
  case_statements_simple:
    101. âœ“ [32mSimple case with single statement branches[0m
  case_true_of_in_expressions_test:
    102. âœ“ [32mCASE TRUE OF with IN expressions and array indexing[0m
  case_true_of_statements:
    103. âœ“ [32mCase TRUE OF with comparison expressions[0m
    104. âœ“ [32mCase TRUE OF with simple comparison[0m
    105. âœ“ [32mCase TRUE OF with NOT expression[0m
  char_allowed_property_test:
    106. âœ“ [32mPage field with CharAllowed property[0m
  closing_dates_property_test:
    107. âœ“ [32mClosingDates property in table field[0m
    108. âœ“ [32mClosingDates property case variations[0m
    109. âœ“ [32mClosingDates with other date field properties[0m
  codeunit:
    110. âœ“ [32mBasic Codeunit Test[0m
  codeunitAdvanced:
    111. âœ“ [32mBasic Codeunit Declaration[0m
    112. âœ“ [32mCodeunit With Properties[0m
    113. âœ“ [32mVariable Declarations[0m
    114. âœ“ [32mBasic Procedure[0m
    115. âœ“ [32mBasic Trigger[0m
    116. âœ“ [32mProcedure With Var Section[0m
  codeunit_case_variations_test:
    117. âœ“ [32mCodeunit type case variations[0m
  codeunit_table_no_property:
    118. âœ“ [32mCodeunit with TableNo property using quoted identifier[0m
    119. âœ“ [32mCodeunit with TableNo property using identifier[0m
    120. âœ“ [32mCodeunit with TableNo property using integer table ID[0m
    121. âœ“ [32mCodeunit with multiple properties including TableNo[0m
  compound_assignment_operators_test:
    122. âœ“ [32mCodeunit with compound assignment operators[0m
  conditional_object_declaration_test:
    123. âœ— [31mConditional object declaration (known limitation)[0m[31m -- Warning: Slow parse rate (1174.290 bytes/ms)[0m
  conditional_procedure_test:
    124. âœ“ [32mProcedures inside conditional compilation blocks test[0m
  context_sensitive_validation_test:
    125. âœ“ [32mNew property keywords work automatically as variable names[0m
    126. âœ“ [32mHigh precedence variables work with standard identifiers[0m
  controladdin_obsolete_properties:
    127. âœ“ [32mControlAddIn with all obsolete properties[0m[31m -- Warning: Slow parse rate (7148.056 bytes/ms)[0m
    128. âœ“ [32mControlAddIn with ObsoleteState Removed[0m
    129. âœ“ [32mControlAddIn with only ObsoleteState property[0m
    130. âœ“ [32mControlAddIn with case variations of obsolete state[0m
    131. âœ“ [32mControlAddIn mixing obsolete and normal properties[0m
  controladdin_test:
    132. âœ“ [32mControl Add-in Declaration[0m
  cuegroup_layout_property_test:
    133. âœ“ [32mCueGroupLayout property test[0m
    134. âœ“ [32mCueGroupLayout variations[0m
  data_caption_expression:
    135. âœ“ [32mDataCaptionExpression property with expressions[0m
  data_classification_field_test:
    136. âœ“ [32mDataClassification property in field declarations[0m
    137. âœ“ [32mDataClassification with all possible values[0m
    138. âœ“ [32mDataClassification with case variations[0m
  database_const_filter_test:
    139. âœ“ [32mDatabase reference in const filter expressions[0m
    140. âœ“ [32mDatabase reference with unquoted table name[0m
    141. âœ“ [32mDatabase reference in various contexts[0m
  database_references:
    142. âœ“ [32mDATABASE References Test[0m
  dataitem_link_field_function_test:
    143. âœ“ [32mDataItemLink property with FIELD function syntax[0m
    144. âœ“ [32mDataItemLink property with traditional dot syntax[0m
    145. âœ“ [32mDataItemLink property with multiple fields and mixed syntax[0m
    146. âœ“ [32mDataItemLink property with case variations[0m
  dataitem_link_reference_test:
    147. âœ“ [32mReport dataitem with DataItemLinkReference property[0m
    148. âœ“ [32mDataItemLinkReference with quoted identifier[0m
    149. âœ“ [32mDataItemLinkReference case variations[0m
    150. âœ“ [32mDataItemLinkReference with multiple properties[0m
  dataitem_table_filter_pipe_test:
    151. âœ“ [32mDataItemTableFilter with pipe-separated values[0m
  dataitemlink_multiple_test:
    152. âœ“ [32mDataItemLink with multiple field mappings[0m
    153. âœ“ [32mDataItemLink variations[0m
    154. âœ“ [32mDataItemLink with FIELD syntax[0m
  date_formula_property_test:
    155. âœ“ [32mField with DateFormula property in report[0m
    156. âœ“ [32mField with DateFormula mixed case[0m
  default_implementation_multiple_test:
    157. âœ“ [32mDefaultImplementation with multiple interfaces[0m
    158. âœ“ [32mDefaultImplementation mixed quoted and unquoted[0m
    159. âœ“ [32mDefaultImplementation case variations with multiple values[0m
  default_implementation_property_test:
    160. âœ“ [32mDefaultImplementation property in enum with interface[0m
    161. âœ“ [32mDefaultImplementation property with case variations[0m
    162. âœ“ [32mDefaultImplementation property with unquoted identifiers[0m
    163. âœ“ [32mEnum with multiple properties including DefaultImplementation[0m
  dotnet_is_control_addin_test:
    164. âœ“ [32mDotNet type with IsControlAddIn property[0m
  dotnet_types_with_namespaces:
    165. âœ“ [32mDotNet types with namespaces[0m
    166. âœ“ [32mDotNet types in field declarations[0m
    167. âœ“ [32mMultiple DotNet namespace levels[0m
  entitlement_roletype_test:
    168. âœ“ [32mEntitlement with RoleType property - Delegated[0m
    169. âœ“ [32mEntitlement with RoleType property - case variations[0m
    170. âœ“ [32mComplete entitlement with all properties[0m
    171. âœ“ [32mEntitlement with custom RoleType identifier[0m
  entitlement_test:
    172. âœ“ [32mBasic entitlement with ApplicationScope[0m
    173. âœ“ [32mEntitlement with PerUserServicePlan[0m
    174. âœ“ [32mEntitlement with namespace[0m
    175. âœ“ [32mEntitlement with multiple ObjectEntitlements[0m
    176. âœ“ [32mEntitlement with case variations[0m
    177. âœ“ [32mEntitlement with universal properties[0m
  enum_assignment_compatibility:
    178. âœ“ [32mEnum with AssignmentCompatibility property[0m
    179. âœ“ [32mEnum with AssignmentCompatibility false[0m
    180. âœ“ [32mEnum with both AssignmentCompatibility and Extensible properties[0m
    181. âœ“ [32mEnum with only AssignmentCompatibility property[0m
    182. âœ“ [32mEnum with uppercase TRUE/FALSE values[0m
  enum_field:
    183. âœ“ [32mEnum field in table[0m
  enum_interface_implementations:
    184. âœ“ [32mEnum with interface implementations - basic case[0m
    185. âœ“ [32mEnum with quoted identifier implementations[0m
    186. âœ“ [32mEnum with mixed quoted and unquoted implementations[0m
    187. âœ“ [32mEnum with multiple properties including implementation[0m
  enum_keyword_qualification:
    188. âœ“ [32mEnum Keyword Qualification[0m
  enum_type_reference_methods_test:
    189. âœ“ [32mEnum type reference with Ordinals method call[0m
    190. âœ“ [32mEnum type reference with Names method call[0m
    191. âœ“ [32mMultiple enum type references with different methods[0m
    192. âœ“ [32mEnum type reference with case variations[0m
    193. âœ“ [32mEnum type reference with unquoted identifier[0m
  enum_variables:
    194. âœ“ [32mEnum Variable Declaration[0m
    195. âœ“ [32mEnum Variable Assignment[0m
    196. âœ“ [32mEnum Comparison in If Statement[0m
    197. âœ“ [32mEnum in Case Statement[0m
    198. âœ“ [32mQuoted Enum Values[0m
    199. âœ“ [32mReturn Enum Value[0m
    200. âœ“ [32mParameter of Enum Type[0m
  enumextension_test:
    201. âœ“ [32mBasic enum extension[0m
    202. âœ“ [32mEnum extension with implementation[0m
    203. âœ“ [32mEnum extension with multiple properties[0m
  event_subscriber_instance_property_test:
    204. âœ“ [32mEventSubscriberInstance property with StaticAutomatic value[0m
    205. âœ“ [32mEventSubscriberInstance property with Static value[0m
    206. âœ“ [32mEventSubscriberInstance property with Manual value[0m
  exit_statements:
    207. âœ“ [32mBasic Exit Statement Patterns[0m
  extended_datatype_barcode_test:
    208. âœ“ [32mExtendedDatatype property with Barcode value test[0m
  external_type_simple_test:
    209. âœ“ [32mExternalType property simple test[0m
  field_image_property_with_trigger:
    210. âœ“ [32mField with Image property and trigger in cuegroup[0m
  field_reference_comprehensive_test:
    211. âœ“ [32mComprehensive field reference expressions test[0m
  field_trigger_parameters_return_type_test:
    212. âœ“ [32mField trigger with parameters and return type - OnLookup with semicolon[0m
    213. âœ“ [32mField trigger with parameters and return type - OnLookup without semicolon[0m
    214. âœ“ [32mField trigger with multiple parameters and return type[0m
    215. âœ“ [32mField trigger without parameters but with return type[0m
    216. âœ“ [32mField trigger compatibility with basic triggers[0m
  fieldgroup_modifications_test:
    217. âœ“ [32mFieldgroup addlast modification[0m
    218. âœ“ [32mFieldgroup addfirst modification[0m
    219. âœ“ [32mMultiple fieldgroup modifications[0m
  fieldgroups_test:
    220. âœ“ [32mBasic fieldgroup declaration[0m
    221. âœ“ [32mFieldgroup with single field[0m
    222. âœ“ [32mMultiple fieldgroups with mixed identifiers[0m
  file_level_preprocessor_test:
    223. âœ“ [32mFile-level preprocessor conditional[0m
    224. âœ“ [32mFile-level preprocessor with else branch[0m
    225. âœ“ [32mFile-level preprocessor with namespace[0m
  fileuploadaction_test:
    226. âœ“ [32mBasic fileuploadaction declaration[0m
    227. âœ“ [32mFileUploadAction with all properties[0m
    228. âœ“ [32mFileUploadAction case variations[0m
    229. âœ“ [32mFileUploadAction with complex trigger[0m
    230. âœ“ [32mFileUploadAction with obsolete properties[0m
  filter_and_expression_test:
    231. âœ“ [32mFilter with AND expression - two not equal conditions[0m
    232. âœ“ [32mFilter with AND expression - three conditions[0m
    233. âœ“ [32mFilter with AND expression - mixed operators[0m
    234. âœ“ [32mFilter with AND expression - with identifiers[0m
    235. âœ“ [32mFilter with AND expression - range and comparison[0m
  filter_comparison_operators:
    236. âœ“ [32mFilter with less than operator[0m
    237. âœ“ [32mFilter with greater than operator[0m
    238. âœ“ [32mFilter with less than or equal operator[0m
    239. âœ“ [32mFilter with greater than or equal operator[0m
  filter_equal_expression_test:
    240. âœ“ [32mFILTER expressions with equals prefix for field filters[0m
  filter_field_reference_test:
    241. âœ“ [32mFILTER function in field references test[0m
  filter_pipe_syntax_test:
    242. âœ“ [32mFILTER pipe syntax in SubPageLink[0m
    243. âœ“ [32mFILTER with multiple OR conditions[0m
    244. âœ“ [32mFILTER with comparison operators[0m
  filter_properties_baseline_test:
    245. âœ“ [32mBASELINE: ShowFilter property (boolean pattern)[0m
    246. âœ“ [32mBASELINE: DataItemTableView property (source_table_view_value pattern)[0m
    247. âœ“ [32mBASELINE: SourceTableView property (source_table_view_value pattern)[0m
    248. âœ“ [32mBASELINE: filters_property simple usage (mixed pattern)[0m
    249. âœ“ [32mBASELINE: FILTER function with range (detailed pattern)[0m
    250. âœ“ [32mBASELINE: FILTER function with identifier (detailed pattern)[0m
  filter_range_expression_test:
    251. âœ“ [32mFilter range expression with open-ended range[0m
    252. âœ“ [32mFilter range expression with both start and end values[0m
    253. âœ“ [32mFilter range expression with string values[0m
    254. âœ“ [32mOpen-ended range with string start value[0m
  for_downto_statement_test:
    255. âœ“ [32mFOR statement with DOWNTO keyword[0m
  freeze_column_property_test:
    256. âœ“ [32mFreezeColumn property in repeater sections[0m
  grid_layout_property_test:
    257. âœ“ [32mGridLayout property in report requestpage grid sections[0m
    258. âœ“ [32mGridLayout property with Rows value[0m
    259. âœ“ [32mGridLayout property combined with other grid properties[0m
    260. âœ“ [32mGridLayout property in page grid sections[0m
    261. âœ“ [32mGridLayout property case variations[0m
  identifiers:
    262. âœ“ [32mBasic identifiers[0m
    263. âœ“ [32mField identifiers[0m
  include_caption_property_variations_test:
    264. âœ“ [32mIncludeCaption property variations in report columns[0m
  indentation_column_property_test:
    265. âœ“ [32mIndentationColumn property in repeater sections[0m
    266. âœ“ [32mIndentationColumn property with different values[0m
  indentation_controls_property_test:
    267. âœ“ [32mIndentationControls property with identifier value[0m
    268. âœ“ [32mIndentationControls property with quoted identifier value[0m
    269. âœ“ [32mIndentationControls in G/L Account hierarchy list context[0m
    270. âœ“ [32mIndentationControls with mixed properties in complex repeater[0m
  instructional_text_property_test:
    271. âœ“ [32mInstructionalText property in page group[0m
    272. âœ“ [32mInstructionalTextML property in page group[0m
    273. âœ“ [32mInstructionalText in wizard page pattern[0m
  interface_is_as_operators_simple:
    274. âœ“ [32mSimple 'is' operator test[0m
    275. âœ“ [32mSimple 'as' operator test[0m
    276. âœ“ [32mMixed operators test[0m
  interface_named_return_test:
    277. âœ“ [32mInterface with named return values[0m
    278. âœ“ [32mInterface with simple return types (existing support)[0m
    279. âœ“ [32mInterface procedures without return types[0m
  interface_properties_test:
    280. âœ“ [32mInterface with obsolete properties[0m
    281. âœ“ [32mInterface with access and inherent permissions[0m
    282. âœ“ [32mInterface with caption and description[0m
  interface_test:
    283. âœ“ [32mInterface Declaration[0m
  key_properties:
    284. âœ“ [32mKey Properties Test[0m
  key_sql_properties_test:
    285. âœ“ [32mKey with MaintainSQLIndex property[0m
    286. âœ“ [32mKey properties case variations[0m
    287. âœ“ [32mComplete key with all SQL-related properties[0m
  label_declaration_test:
    288. âœ“ [32mReport with label declarations[0m
    289. âœ“ [32mLabels with mixed case properties[0m
  label_multiline_property:
    290. âœ“ [32mLabel MultiLine property support[0m
  label_variables:
    291. âœ“ [32mLabel variable declarations[0m
    292. âœ“ [32mLabel variables with attributes[0m
    293. âœ“ [32mProperty keywords as variable names[0m
  label_variables_with_values_test:
    294. âœ“ [32mLabel variable declarations with string literal values[0m
  layout_movement_commands_test:
    295. âœ“ [32mLayout movement commands in page extensions - movelast[0m
    296. âœ“ [32mLayout movement commands - movefirst[0m
    297. âœ“ [32mLayout movement commands - moveafter[0m
    298. âœ“ [32mLayout movement commands - movebefore with quoted identifiers[0m
  lookup_formula_test:
    299. âœ“ [32mLookup formula with table.field syntax[0m
  max_iteration_property_test:
    300. âœ“ [32mMaxIteration property in report dataitem[0m
    301. âœ“ [32mMaxIteration property with different case variations[0m
    302. âœ“ [32mMaxIteration property with large integer values[0m
  method_calls:
    303. âœ“ [32mGeneric Method Call[0m
    304. âœ“ [32mRecord Method Calls[0m
    305. âœ“ [32mBoolean Method Conditions[0m
    306. âœ“ [32mMixed Method Calls With Parameters[0m
  mixed_method_calls:
    307. âœ“ [32mMixed Method Types[0m
    308. âœ“ [32mComplex Parameter Calls[0m
  modify_layout_modification_test:
    309. âœ“ [32mPage extension with modify layout modifications[0m
  moved_from_moved_to_properties_test:
    310. âœ“ [32mMovedFrom property in field declaration[0m
    311. âœ“ [32mMovedTo property in field declaration[0m
    312. âœ“ [32mBoth MovedFrom and MovedTo properties together[0m
  multidimensional_array_access:
    313. âœ“ [32mMulti-dimensional array assignment[0m
    314. âœ“ [32mMulti-dimensional array access in expressions[0m
    315. âœ“ [32mThree-dimensional array access[0m
    316. âœ“ [32mArray access with variable indices[0m
  multidimensional_arrays:
    317. âœ“ [32mMulti-dimensional arrays in procedure parameters[0m
    318. âœ“ [32mSingle-dimensional array for comparison[0m
    319. âœ“ [32mThree-dimensional array[0m
  multiline_comment_test:
    320. âœ“ [32mMultiline comment in codeunit[0m
    321. âœ“ [32mMultiline comment with special characters[0m
    322. âœ“ [32mMultiline comment between statements[0m
  multiline_page_link_properties_test:
    323. âœ“ [32mSubPageLink with multiline field mappings with comma[0m
    324. âœ“ [32mRunPageLink with multiline field mappings with comma[0m
    325. âœ“ [32mMixed multiline and comma-separated syntax[0m
  multiple_interface_implementations:
    326. âœ“ [32mCodeunit with multiple interface implementations[0m
    327. âœ“ [32mCodeunit with single interface implementation[0m
    328. âœ“ [32mCodeunit with quoted interface names[0m
    329. âœ“ [32mCodeunit with many interfaces (5 interfaces)[0m
    330. âœ“ [32mCodeunit with interfaces and procedures[0m
  namespace_case_insensitive_test:
    331. âœ“ [32mNamespace declaration with case variations[0m[31m -- Warning: Slow parse rate (2843.805 bytes/ms)[0m
  namespace_declarations:
    332. âœ“ [32mSimple namespace with single identifier[0m
    333. âœ“ [32mNamespace with dotted path and page extension[0m
    334. âœ“ [32mNamespace with table declaration[0m
    335. âœ“ [32mLong namespace path with multiple dots[0m
    336. âœ“ [32mFile without namespace (backwards compatibility)[0m
    337. âœ“ [32mNamespace with permissionset[0m
  namespace_qualified_enum_types:
    338. âœ“ [32mNamespace-qualified enum type in field declaration[0m
    339. âœ“ [32mMultiple namespace-qualified enum fields[0m
    340. âœ“ [32mNamespace-qualified enum with unquoted identifier[0m
    341. âœ“ [32mNamespace-qualified enum in variable declaration[0m
    342. âœ“ [32mNamespace-qualified enum in procedure parameter[0m
  namespace_qualified_records_test:
    343. âœ“ [32mNamespace qualified record types in variable declarations[0m
  namespaces_property_test:
    344. âœ“ [32mXMLPort with namespaces property[0m
    345. âœ“ [32mXMLPort with single namespace mapping[0m
  negated_exist_formula_test:
    346. âœ“ [32mNegated exist formula in CalcFormula[0m
    347. âœ“ [32mSimple negated exist formula[0m
  obsolete_state_moved_test:
    348. âœ“ [32mObsoleteState property with Moved value test[0m
  onaftergetcurr_trigger:
    349. âœ“ [32mOnAfterGetCurrRecord Trigger[0m
  onrun_trigger_semicolon_test:
    350. âœ“ [32mOnRun trigger with semicolon[0m
    351. âœ“ [32mOnRun trigger without semicolon (backward compatibility)[0m
    352. âœ“ [32mOnRun trigger with var section and semicolon[0m
  optimize_for_text_search_field_property_test:
    353. âœ“ [32mOptimizeForTextSearch property in table field declarations[0m
  option_caption_comment_parameter_test:
    354. âœ“ [32mOptionCaption property with Comment parameter support[0m
  option_empty_members_test:
    355. âœ“ [32mOption type with empty members (consecutive commas)[0m[31m -- Warning: Slow parse rate (7348.785 bytes/ms)[0m
    356. âœ“ [32mOption type with all empty members[0m
    357. âœ“ [32mOption type with mixed empty and non-empty members[0m
    358. âœ“ [32mOptionMembers property with consecutive commas[0m
  option_enum_with_backslashes:
    359. âœ“ [32mOption enum with backslashes in quoted identifiers[0m
  option_members_mixed_test:
    360. âœ“ [32mOptionMembers with string literal space as first member[0m
    361. âœ“ [32mOptionMembers with all string literals[0m
    362. âœ“ [32mOptionMembers with mixed string literals and identifiers[0m
    363. âœ“ [32mOptionMembers with quoted identifiers[0m
    364. âœ“ [32mOptionMembers single string literal edge case[0m
  option_ordinal_values_test:
    365. âœ“ [32mOption field with OptionOrdinalValues property[0m
    366. âœ“ [32mOption field with complex OptionOrdinalValues[0m
  option_type_inline_members:
    367. âœ“ [32mOption type with inline members in variable declarations[0m
    368. âœ“ [32mOption type with inline members in procedure parameters[0m
  option_variable_in_page_var_section_test:
    369. âœ“ [32mOption type variable in page var section followed by other variables[0m
  order_by_multiple_fields_test:
    370. âœ“ [32mOrderBy property with multiple fields in single item[0m
    371. âœ“ [32mOrderBy property with multiple fields and mixed directions[0m
    372. âœ“ [32mOrderBy property with quoted field names[0m
  order_by_property_test:
    373. âœ“ [32mQuery with OrderBy property[0m
    374. âœ“ [32mQuery with single OrderBy item[0m
    375. âœ“ [32mQuery with mixed case OrderBy[0m
  page_about_properties_test:
    376. âœ“ [32mPage with AboutTitle and AboutText properties[0m
    377. âœ“ [32mPage with AboutTitle, AboutText, and other properties[0m
    378. âœ“ [32mPage with AboutTitle containing apostrophes[0m
    379. âœ“ [32mPage with long AboutText[0m
  page_action_areas_test:
    380. âœ“ [32mPage action area embedding[0m
    381. âœ“ [32mPage action area sections with groups[0m
    382. âœ“ [32mAction with complex RunPageView WHERE clause[0m
    383. âœ“ [32mAction obsolete properties[0m
  page_action_groups:
    384. âœ“ [32mPage with action groups and variable properties[0m
  page_complex_properties_test:
    385. âœ“ [32mPage with complex properties test[0m
  page_extension_action_modify_triggers_test:
    386. âœ“ [32mPage extension with action modify containing triggers[0m
    387. âœ“ [32mPage extension action modify with mixed properties and triggers[0m
  page_field_min_max_value_properties:
    388. âœ“ [32mPage field with MinValue property using integer[0m
    389. âœ“ [32mPage field with MaxValue property using expression[0m
    390. âœ“ [32mPage field with MinValue using decimal and variable expression[0m
    391. âœ“ [32mPage field with control name and MinValue property[0m
    392. âœ“ [32mPage field with complex expression in MaxValue[0m
  page_field_properties_batch1:
    393. âœ“ [32mFirst batch of Page Field Properties[0m
  page_field_properties_new_batch:
    394. âœ“ [32mNewly Implemented Page Field Properties[0m
  page_field_properties_phase3:
    395. âœ“ [32mPage Field Properties Phase 3 - High Priority[0m
  page_field_triggers_test:
    396. âœ“ [32mPage field trigger with OnDrillDown and semicolon[0m
    397. âœ“ [32mPage field trigger with OnDrillDown without semicolon[0m
    398. âœ“ [32mPage field triggers with multiple trigger types[0m
  page_level_variable_declarations_test:
    399. âœ“ [32mPage-level variable declarations with keyword-named variables[0m
  page_properties:
    400. âœ“ [32mPage Properties[0m
  page_properties_phase1:
    401. âœ“ [32mPage Properties Phase 1[0m
  page_properties_phase2a:
    402. âœ“ [32mPage Properties Phase 2A - Boolean Properties[0m
  page_properties_phase2b:
    403. âœ“ [32mPage Properties Phase 2B - Complex Properties[0m
  page_properties_phase4a:
    404. âœ“ [32mPage Properties Phase 4A - High + Medium Priority[0m
  page_properties_phase4b_batch1:
    405. âœ“ [32mPage Properties Phase 4B Batch 1 - AdditionalSearchTermsML[0m
  page_properties_phase4b_batch2:
    406. âœ“ [32mPage Properties Phase 4B Batch 2 - Web Service Properties[0m
  page_properties_phase4c:
    407. âœ“ [32mPage Properties Phase 4C - Remaining Low Priority Properties[0m
  page_region_directives_test:
    408. âœ“ [32mPage with region directives for code organization[0m
  page_trigger_with_return_type:
    409. âœ“ [32mPage trigger with return type[0m
  page_triggers:
    410. âœ“ [32mPage-level triggers[0m
  page_type_variable:
    411. âœ“ [32mPage Type Variable Test[0m
  page_views_test:
    412. âœ“ [32mList page with simple view using Filters property[0m
    413. âœ“ [32mList page with multiple views and different properties[0m
    414. âœ“ [32mPage extension with additional view[0m
    415. âœ“ [32mViews with CaptionML property[0m
    416. âœ“ [32mEmpty views section[0m
  pagecustomization_test:
    417. âœ“ [32mPage customization with addfirst views[0m
    418. âœ“ [32mPage customization with addlast views[0m
    419. âœ“ [32mPage customization with addafter views[0m
    420. âœ“ [32mPage customization with multiple views[0m
  pageextension_attributed_procedures_test:
    421. âœ“ [32mPage extension with IntegrationEvent attributed procedure[0m
    422. âœ“ [32mPage extension with EventSubscriber attributed procedure[0m
  pageextension_field_properties_test:
    423. âœ“ [32mPageExtension modify field with QuickEntry and Importance properties[0m
  permissions_empty_xmlport_test:
    424. âœ“ [32mEmpty permissions property[0m
    425. âœ“ [32mXMLport type in variable declaration[0m
    426. âœ“ [32mXMLport type with integer reference[0m
  permissions_property_test:
    427. âœ“ [32mCodeunit with Permissions property[0m
    428. âœ“ [32mReport with TestPermissions property[0m
    429. âœ“ [32mPage with multiple permission properties[0m
    430. âœ“ [32mTestPermissions with NonRestrictedProperties value[0m
  permissionset_pragma_directives_test:
    431. âœ“ [32mPermissionSet with pragma directives in permissions[0m
  permissionset_preprocessor_pragma_test:
    432. âœ“ [32mPermissionSet with preprocessor and pragma directives in permissions[0m
    433. âœ“ [32mPermissionSet with preprocessor else branch and pragma[0m
    434. âœ“ [32mPermissionSet with multiple pragma directives in preprocessor[0m
    435. âœ“ [32mPermissionSet with pragma between every permission in preprocessor[0m
  permissionset_properties:
    436. âœ“ [32mPermissionSet with Access and IncludedPermissionSets properties[0m
    437. âœ“ [32mPermissionSet with single IncludedPermissionSet[0m
    438. âœ“ [32mPermissionSet with Access Private and unquoted included sets[0m
    439. âœ“ [32mPermissionSet with only basic properties[0m
    440. âœ“ [32mPermissionSet with multiple included permission sets (three items)[0m
  permissionsetextension_test:
    441. âœ“ [32mBasic permissionsetextension[0m
    442. âœ“ [32mPermissionSetExtension with namespace[0m
    443. âœ“ [32mPermissionSetExtension with multiple included permission sets[0m
    444. âœ“ [32mPermissionSetExtension with permissions[0m
    445. âœ“ [32mPermissionSetExtension with mixed properties[0m
    446. âœ“ [32mPermissionSetExtension case variations[0m
    447. âœ“ [32mPermissionSetExtension with excluded permission sets[0m
  pragma:
    448. âœ“ [32mPragma directives[0m
  pragma_directives_test:
    449. âœ“ [32mPragma directives in variable declarations[0m
  pragma_in_code_blocks_test:
    450. âœ“ [32mPragma directives within code blocks[0m
  pragma_in_if_statement:
    451. âœ“ [32mPragma directives in if statement without begin/end block[0m
  pragma_layout_directives_test:
    452. âœ“ [32mPragma directives in page layout sections[0m
  preproc_conditional_enum_test:
    453. âœ“ [32mPreprocessor conditional enum declaration with different implements[0m
    454. âœ“ [32mSimple preprocessor conditional enum without pragma[0m
  preproc_conditional_var_sections_test:
    455. âœ“ [32mCodeunit with conditional var section using CLEAN directive[0m
    456. âœ“ [32mPage with conditional var section with else clause[0m
    457. âœ“ [32mTable with conditional var section[0m
    458. âœ“ [32mReport with conditional var section[0m
    459. âœ“ [32mXMLPort with conditional var section[0m
  preprocessor_actions_test:
    460. âœ“ [32mPreprocessor directives in actions section[0m
    461. âœ“ [32mPreprocessor with else branch in actions[0m
    462. âœ“ [32mNested action groups with preprocessor[0m
    463. âœ“ [32mMixed preprocessor cases in actions[0m
  preprocessor_case_statements_test:
    464. âœ“ [32mPreprocessor directives in case statements[0m
  preprocessor_conditional_attributes_test:
    465. âœ“ [32mPreprocessor directives wrapping attributes for procedures[0m
  preprocessor_conditional_using_statements_test:
    466. âœ“ [32mPreprocessor conditional directives in using statements[0m
  preprocessor_directives_test:
    467. âœ“ [32mPreprocessor directives in layout[0m
    468. âœ“ [32mUppercase preprocessor directives in code blocks[0m
    469. âœ“ [32mMixed case preprocessor directives in code blocks[0m
    470. âœ“ [32mUppercase preprocessor directives with complex conditions[0m
  preprocessor_enum_extension_test:
    471. âœ“ [32mPreprocessor conditionals in enum extensions[0m
  preprocessor_if_not_with_else_test:
    472. âœ“ [32mPreprocessor #if not with #else in using statements[0m
  preprocessor_multiple_using_statements_test:
    473. âœ“ [32mMultiple using statements in preprocessor conditionals[0m
  preprocessor_object_properties_test:
    474. âœ“ [32mCodeunit with preprocessor conditional properties[0m
    475. âœ“ [32mCodeunit with mixed properties and preprocessor conditionals[0m
    476. âœ“ [32mTable with preprocessor conditional properties[0m
    477. âœ“ [32mPage with preprocessor conditional properties[0m
    478. âœ“ [32mReport with preprocessor conditional properties[0m
    479. âœ“ [32mXMLPort with preprocessor conditional properties[0m
    480. âœ“ [32mQuery with preprocessor conditional properties[0m
    481. âœ“ [32mEnum with preprocessor conditional properties[0m
    482. âœ“ [32mPermissionSet with preprocessor conditional properties[0m
    483. âœ“ [32mControlAddIn with preprocessor conditional properties[0m
    484. âœ“ [32mProfile with preprocessor conditional properties[0m
  preprocessor_separator_actions_test:
    485. âœ“ [32mPreprocessor with separator in actions[0m
    486. âœ“ [32mComplex preprocessor with multiple separators and actions[0m
    487. âœ“ [32mSeparator with various properties[0m
    488. âœ“ [32mSeparator in else branch of preprocessor[0m
  preprocessor_statements_test:
    489. âœ“ [32mPreprocessor directives within statement blocks[0m
  preprocessor_table_relation_test:
    490. âœ“ [32mTableRelation with preprocessor conditional at end[0m
    491. âœ“ [32mSimple TableRelation with preprocessor[0m
    492. âœ“ [32mTableRelation with multiple nested IFs and preprocessor[0m
  print_only_if_detail_test:
    493. âœ“ [32mReport dataitem with PrintOnlyIfDetail property[0m
    494. âœ“ [32mReport dataitem with PrintOnlyIfDetail false[0m
    495. âœ“ [32mReport dataitem with PrintOnlyIfDetail case variations[0m
  printonlyifdetail_after_requestfilterfields_test:
    496. âœ“ [32mPrintOnlyIfDetail after RequestFilterFields[0m
    497. âœ“ [32mMultiple properties with PrintOnlyIfDetail[0m
    498. âœ“ [32mPrintOnlyIfDetail used as field name in RequestFilterFields[0m
  procedure_preproc_var_test:
    499. âœ“ [32mProcedure with preprocessor conditional var section[0m
    500. âœ“ [32mProcedure with simple preprocessor var section[0m
  procedure_return_types:
    501. âœ“ [32mProcedure Return Types[0m
  procedure_simple:
    502. âœ“ [32mProcedure Simple[0m
  profile_properties_test:
    503. âœ“ [32mProfile with RoleCenter property[0m
    504. âœ“ [32mProfile with Customizations property[0m
    505. âœ“ [32mProfile with mixed case properties[0m
  profile_test:
    506. âœ“ [32mBasic profile declaration[0m
    507. âœ“ [32mProfile with customizations list[0m
    508. âœ“ [32mProfile with single customization[0m
    509. âœ“ [32mProfile with unquoted identifiers[0m
    510. âœ“ [32mProfile with minimal properties[0m
    511. âœ“ [32mProfile with extended properties[0m
    512. âœ“ [32mProfile with mixed property types[0m
    513. âœ“ [32mProfile with empty customizations[0m
  prompt_dialog_features_test:
    514. âœ“ [32mPrompt dialog with PromptMode Generate and new area types[0m
  prompt_mode_property_test:
    515. âœ“ [32mPromptMode property with different values[0m
  promptguide_area_test:
    516. âœ“ [32mPromptGuide area in actions[0m
    517. âœ“ [32mPromptGuide area case variations[0m
    518. âœ“ [32mPromptGuide with multiple groups[0m
  property_comment_parameters_extended_test:
    519. âœ“ [32mAboutTitle property with comment parameter variations[0m
    520. âœ“ [32mInstructionalText property with comment parameters[0m
    521. âœ“ [32mToolTip property with case-insensitive comment parameters[0m
  protected_procedure_modifier:
    522. âœ“ [32mProtected procedure modifier[0m
  provider_property_test:
    523. âœ“ [32mPage part with Provider property[0m
    524. âœ“ [32mPage part with quoted Provider property value[0m
  qualified_trigger_test:
    525. âœ“ [32mQualified trigger with provider and event[0m
    526. âœ“ [32mMultiple qualified triggers[0m
    527. âœ“ [32mRegular triggers alongside qualified triggers[0m
  query:
    query_object:
      528. âœ“ [32mBasic Query Test[0m
  query_api_properties_test:
    529. âœ“ [32mQuery with API properties[0m
    530. âœ“ [32mQuery with mixed case API properties[0m
    531. âœ“ [32mQuery with all supported properties[0m
  query_computed_column_test:
    532. âœ“ [32mQuery with computed column[0m
    533. âœ“ [32mQuery with standard and computed columns[0m
  query_entity_properties_test:
    534. âœ“ [32mQuery with EntitySetCaption and other entity properties[0m
  query_filter_test:
    535. âœ“ [32mQuery with filter elements in dataitem[0m
    536. âœ“ [32mQuery with filter elements and caption[0m
  quoted_identifier_escaped_test:
    537. âœ“ [32mQuoted identifier with escaped double quotes in field[0m
    538. âœ“ [32mField with pragma directives and escaped quotes[0m
    539. âœ“ [32mReport column with escaped quotes[0m
    540. âœ“ [32mTable field with quoted identifier[0m
  quoted_return_parameter_test:
    541. âœ“ [32mProcedure with quoted return parameter name[0m
    542. âœ“ [32mProcedure with unquoted return parameter name[0m
  range_and_in_expressions:
    543. âœ“ [32mIN expression with range operator[0m
    544. âœ“ [32mIN expression with multiple ranges[0m
    545. âœ“ [32mIN expression with individual values[0m
    546. âœ“ [32mRange operator in other contexts[0m[31m -- Warning: Slow parse rate (7521.986 bytes/ms)[0m
    547. âœ“ [32mComplex IN expression with field access[0m
  recordid_case_variant:
    548. âœ“ [32mRecordID type with mixed case[0m
  region_directives_test:
    549. âœ“ [32mBasic region directive in codeunit[0m
    550. âœ“ [32mRegion with description text[0m
    551. âœ“ [32mNested regions[0m
    552. âœ“ [32mRegion in table with fields[0m
    553. âœ“ [32mRegion with var section and procedures[0m
  rendering_section_test:
    554. âœ“ [32mReport with rendering section[0m
    555. âœ“ [32mEmpty rendering section[0m
  repeater_visible_property_test:
    556. âœ“ [32mRepeater with Visible property[0m
  report_column_expressions:
    557. âœ“ [32mReport column with method call expression[0m
    558. âœ“ [32mReport column with function call[0m
    559. âœ“ [32mReport column with field caption[0m
  report_column_properties_test:
    560. âœ“ [32mReport column properties test[0m
  report_comprehensive_test:
    561. âœ“ [32mComprehensive report with dataitem properties and column expressions[0m
  report_data_access_intent_property_test:
    562. âœ“ [32mReport with DataAccessIntent property variations[0m
    563. âœ“ [32mReport with DataAccessIntent ReadWrite case variation[0m
  report_dataitem_properties:
    564. âœ“ [32mReport dataitem with DataItemTableView property[0m
    565. âœ“ [32mReport dataitem with RequestFilterFields property[0m
    566. âœ“ [32mReport dataitem with RequestFilterHeading property[0m
    567. âœ“ [32mReport dataitem with all three properties combined[0m
    568. âœ“ [32mReport dataitem with case variations[0m
  report_default_layout_test:
    569. âœ“ [32mBasic report with DefaultLayout[0m
    570. âœ“ [32mReport with mixed layout properties[0m
    571. âœ“ [32mReport with DefaultLayout and RDLCLayout[0m
    572. âœ“ [32mReport with DefaultLayout case variations[0m
    573. âœ“ [32mReport from error file with all properties[0m
  report_use_request_page_property:
    574. âœ“ [32mReport with UseRequestPage property true[0m
    575. âœ“ [32mReport with UseRequestPage property false[0m
    576. âœ“ [32mReport with only UseRequestPage property[0m
    577. âœ“ [32mReport with mixed properties including UseRequestPage[0m
    578. âœ“ [32mReport with UseRequestPage and case variations[0m
  run_object_qualified_name_test:
    579. âœ“ [32mPage action with qualified RunObject name[0m
    580. âœ“ [32mAction with simple RunObject reference[0m
  run_page_view_test:
    581. âœ“ [32mRunPageView with SORTING and ORDER[0m
    582. âœ“ [32mRunPageView with SORTING only[0m
    583. âœ“ [32mRunPageView with SORTING, ORDER and WHERE[0m
  secrettext_type_test:
    584. âœ“ [32mSecretText type declaration[0m
    585. âœ“ [32mSecretText case variations[0m
    586. âœ“ [32mSecretText with methods[0m
  separator_action:
    587. âœ“ [32mSeparator Action Test[0m
  show_as_property_test:
    588. âœ“ [32mShowAs property with SplitButton value[0m
    589. âœ“ [32mShowAs property with Menu value[0m
    590. âœ“ [32mShowAs property case variations[0m
    591. âœ“ [32mComplete action group with ShowAs and other properties[0m
  show_as_tree_property_test:
    592. âœ“ [32mShowAsTree property in repeater sections[0m
    593. âœ“ [32mShowAsTree property with false value[0m
  show_filter_property_test:
    594. âœ“ [32mShowFilter property in part sections[0m
  show_mandatory_expressions:
    595. âœ“ [32mShowMandatory property with expressions[0m
  simple_member_access:
    596. âœ“ [32mSimple member access[0m
  source_table_view_property:
    597. âœ“ [32mSourceTableView Property Test[0m
  sql_join_type_property_test:
    598. âœ“ [32mQuery with SqlJoinType InnerJoin[0m
    599. âœ“ [32mQuery with SqlJoinType LeftOuterJoin[0m
    600. âœ“ [32mQuery with SqlJoinType CrossJoin[0m
    601. âœ“ [32mReport dataitem with SqlJoinType[0m
    602. âœ“ [32mMixed case SqlJoinType property[0m
  sql_properties_test:
    603. âœ“ [32mSQL Data Type Property Test[0m[31m -- Warning: Slow parse rate (4623.779 bytes/ms)[0m
    604. âœ“ [32mSQL Timestamp Property Test[0m
    605. âœ“ [32mTest Table Relation Property Test[0m
  standalone_semicolon_test:
    606. âœ“ [32mStandalone semicolon in part section[0m
    607. âœ“ [32mStandalone semicolon in action block[0m
    608. âœ“ [32mMultiple standalone semicolons in action[0m
    609. âœ“ [32mStandalone semicolon in systempart[0m
    610. âœ“ [32mStandalone semicolon in action group[0m
    611. âœ“ [32mStandalone semicolon at beginning of properties[0m
    612. âœ“ [32mStandalone semicolon in modify action[0m
  standalone_semicolons_in_properties_test:
    613. âœ“ [32mStandalone semicolons in property lists[0m
  string_concatenation_complex:
    614. âœ“ [32mString concatenation with multiple terms[0m
  string_literal_backslash:
    615. âœ“ [32mString literals with backslash characters[0m
    616. âœ“ [32mString literals with various special characters[0m
    617. âœ“ [32mString literals in complex expressions[0m
    618. âœ“ [32mMixed string literals and function calls[0m
  style_attention_accent:
    619. âœ“ [32mStyle property with AttentionAccent value[0m
    620. âœ“ [32mStyle property with AttentionAccent in repeater[0m
    621. âœ“ [32mStyle property with case variations of AttentionAccent[0m
  style_expr_boolean:
    622. âœ“ [32mStyleExpr property with boolean values[0m
    623. âœ“ [32mStyleExpr property with boolean case variations[0m
    624. âœ“ [32mStyleExpr property with mixed value types[0m
    625. âœ“ [32mStyleExpr with Style property combination[0m
  style_expr_comparison_test:
    626. âœ“ [32mStyleExpr with comparison expressions and enum values[0m
  style_expr_unary_test:
    627. âœ“ [32mStyleExpr with NOT unary expression[0m
    628. âœ“ [32mStyleExpr with 'not' lowercase unary expression[0m
    629. âœ“ [32mStyleExpr with minus unary expression[0m
    630. âœ“ [32mStyleExpr with boolean literal (existing functionality)[0m
    631. âœ“ [32mStyleExpr with identifier (existing functionality)[0m
  style_subordinate_test:
    632. âœ“ [32mStyle property with Subordinate value[0m
  sub_page_link_filter_function_test:
    633. âœ“ [32mSubPageLink property with FILTER function support[0m
  sub_page_link_property_test:
    634. âœ“ [32mSubPageLink property in part sections[0m
  sub_page_view_enhanced:
    635. âœ“ [32mSubPageView with sorting and where clause[0m
    636. âœ“ [32mSubPageView with simple sorting only[0m
    637. âœ“ [32mSubPageView with where clause only[0m
    638. âœ“ [32mSubPageView with string literal value[0m
    639. âœ“ [32mSubPageView with identifier value[0m
  subpagelink_database_reference_test:
    640. âœ“ [32mSubPageLink with Database reference in const[0m
    641. âœ“ [32mAction group with ShowAs property[0m
    642. âœ“ [32mSubPageLink with multiple Database references[0m
  subtype_option_variable_test:
    643. âœ“ [32mSubType variable with Option type (from CDCDocumentFileList.Page.al)[0m
  subtype_userdefined_test:
    644. âœ“ [32mSubType property with UserDefined value in BLOB field[0m
    645. âœ“ [32mSubType property with existing values (Install, Upgrade, Test)[0m
    646. âœ“ [32mSubType property case variations with UserDefined[0m
    647. âœ“ [32mSubType property mixed with other BLOB field properties[0m
    648. âœ“ [32mSubType property in different object types (codeunit vs table)[0m
  subtype_variable_vs_property_test:
    649. âœ“ [32mSubType variable declaration vs property usage[0m
  systempart_test:
    650. âœ“ [32mSystemPart Elements[0m
  table:
    651. âœ“ [32m Simple Table Test[0m
  table_extension_app_page_patterns:
    652. âœ“ [32mTable with complex field properties and lookup formula[0m
  table_extension_attributed_triggers_test:
    653. âœ“ [32mTable extension with attributed triggers test[0m
  table_extension_integration_event_attribute_test:
    654. âœ“ [32mTable extension with IntegrationEvent attributes test[0m
  table_extension_modify_field_triggers_test:
    655. âœ“ [32mTable extension with modify field triggers[0m
    656. âœ“ [32mTable extension with generic triggers in field modify[0m
  table_extension_modify_test:
    657. âœ“ [32mTable extension with modify field statements[0m
    658. âœ“ [32mTable extension with field and modify statements combined[0m
  table_extension_multiple_attributes_test:
    659. âœ“ [32mTable extension with multiple method attributes test[0m
  table_field_trigger_enum:
    660. âœ“ [32mTable Field Trigger with Qualified Enum Values[0m
  table_preprocessor_procedures_test:
    661. âœ“ [32mTable with preprocessor conditional procedures[0m
    662. âœ“ [32mTable with multiple preprocessor conditional procedures[0m
    663. âœ“ [32mTable with preprocessor else branch procedures[0m
    664. âœ“ [32mTable with mixed procedures and triggers in preprocessor[0m
    665. âœ“ [32mTable with procedure without attributes in preprocessor[0m
  table_properties:
    666. âœ“ [32mHigh Priority Properties[0m
    667. âœ“ [32mMedium/Low Priority Properties[0m
    668. âœ— [31mField Properties[0m
  table_relation_preprocessor_conditionals_test:
    669. âœ“ [32mTable relation with preprocessor conditionals in IF...ELSE chain[0m
  table_relation_preprocessor_test:
    670. âœ“ [32mTableRelation with preprocessor in IF chain[0m
    671. âœ“ [32mSimple TableRelation with preprocessor[0m
  tableno_variable_test:
    672. âœ“ [32mTableNo as variable name after Option type[0m
    673. âœ“ [32mTableNo property still works[0m
  temporary_return_type_test:
    674. âœ“ [32mProcedure with temporary return type[0m
    675. âœ“ [32mProcedure with named return value and temporary[0m
    676. âœ“ [32mProcedure with temporary parameter and return[0m
    677. âœ“ [32mCase variations of temporary keyword[0m
  testpage_case_variations_test:
    678. âœ“ [32mTestPage case variations[0m
  testrequestpage_type_test:
    679. âœ“ [32mTestRequestPage data type with various reference formats[0m
  tooltip_case_variations_test:
    680. âœ“ [32mToolTip property with case variations[0m
  tooltip_with_comment:
    681. âœ“ [32mToolTip with Comment parameter[0m
  tree_initial_state_test:
    682. âœ“ [32mRepeater with TreeInitialState property[0m
    683. âœ“ [32mRepeater with ExpandAll TreeInitialState[0m
  trigger_named_return_values_test:
    684. âœ“ [32mPage trigger with named return value - OnFindRecord[0m
    685. âœ“ [32mPage trigger with named return value - OnNextRecord[0m
    686. âœ“ [32mField trigger with named return value[0m
    687. âœ“ [32mTrigger with quoted named return value[0m
    688. âœ“ [32mTrigger with named return value and semicolon[0m
  trigger_preprocessor_directives_test:
    689. âœ“ [32mTrigger with preprocessor in var section[0m
    690. âœ“ [32mField trigger with preprocessor in var section[0m
    691. âœ“ [32mMultiple nested preprocessor conditions in trigger[0m
  trigger_semicolon_termination_test:
    692. âœ“ [32mTrigger with semicolon termination after parameters[0m
    693. âœ“ [32mTrigger without semicolon (backward compatibility)[0m
  unary_operators_test:
    694. âœ“ [32mUnary operators - plus, minus, and not[0m
  unified_filter_pattern_proof_test:
    695. âœ“ [32mPROOF: Unified filter pattern - range expressions work everywhere[0m
    696. âœ“ [32mPROOF: Unified filter pattern - OR expressions work everywhere[0m
    697. âœ“ [32mPROOF: Unified filter pattern - open-ended ranges work everywhere[0m
    698. âœ“ [32mPROOF: Unified filter pattern - simple identifiers work everywhere[0m
  universal_properties_expanded_test:
    699. âœ“ [32mContextSensitiveHelpPage property in multiple object types[0m
    700. âœ“ [32mInstructionalText properties in pages and fields[0m
    701. âœ“ [32mAdditionalSearchTerms in pages and reports[0m
    702. âœ“ [32mExtensible property in multiple object types[0m
  update_propagation_property_test:
    703. âœ“ [32mUpdatePropagation property in part section[0m
    704. âœ“ [32mUpdatePropagation property with different values[0m
  upperlimit_field_reference_test:
    705. âœ“ [32mUPPERLIMIT function in field references test[0m
  upperlimit_filter_field_reference_test:
    706. âœ“ [32mUPPERLIMIT with FILTER function in field references test[0m
  use_temporary_property_test:
    707. âœ“ [32mUseTemporary property in report dataitem[0m
    708. âœ“ [32mUseTemporary property with false value[0m
    709. âœ“ [32mUseTemporary in XMLPort tableelement[0m
    710. âœ“ [32mUseTemporary with mixed properties in report dataitem[0m
    711. âœ“ [32mUseTemporary case variations[0m
  usercontrol_preprocessor_directives_test:
    712. âœ“ [32mUsercontrol with preprocessor directives[0m
  using_statement_test:
    713. âœ“ [32mUsing statement for namespace imports[0m
    714. âœ“ [32mUsing statement without namespace declaration[0m
  validation_properties_test:
    715. âœ“ [32mField with InitValue property[0m
    716. âœ“ [32mField with MinValue and MaxValue properties[0m
    717. âœ“ [32mField with NotBlank and Numeric properties[0m
    718. âœ“ [32mMixed case validation properties[0m
  values_allowed_property_test:
    719. âœ“ [32mValuesAllowed property with mixed string literals and identifiers[0m
    720. âœ“ [32mValuesAllowed property with only string literals[0m
    721. âœ“ [32mValuesAllowed property with only identifiers[0m
    722. âœ“ [32mValuesAllowed property in page field[0m
    723. âœ“ [32mValuesAllowed property with single value[0m
  var_section_preprocessor_directives_test:
    724. âœ“ [32mVar section with preprocessor directives[0m
  visible_property_case_variations_test:
    725. âœ“ [32mVisible property case variations test[0m
  width_property:
    726. âœ“ [32mWidth property in page field[0m
    727. âœ“ [32mWidth property with various values[0m
    728. âœ“ [32mWidth property in different field formats[0m
  with_statement:
    729. âœ“ [32mWITH statement with record variable and code block[0m
    730. âœ“ [32mWITH statement with single statement[0m
    731. âœ“ [32mNested WITH statements[0m
  xmlport_fieldattribute_test:
    732. âœ“ [32mXMLPort with fieldattribute elements[0m
    733. âœ“ [32mXMLPort with fieldattribute and properties[0m
    734. âœ“ [32mNested XMLPort elements with fieldattribute[0m
    735. âœ“ [32mXMLPort fieldattribute with properties[0m
  xmlport_fieldelement_test:
    736. âœ“ [32mXMLPort fieldelement with table.field syntax[0m
    737. âœ“ [32mXMLPort fieldelement with simple table reference[0m
  xmlport_format_property_test:
    738. âœ“ [32mXMLPort Format property with VariableText[0m
    739. âœ“ [32mXMLPort Format property with FixedText[0m
    740. âœ“ [32mXMLPort Format property with original values[0m
    741. âœ“ [32mXMLPort Format property case variations[0m
  xmlport_occurrence_test:
    742. âœ“ [32mXMLPort with fieldattribute Occurrence property[0m
    743. âœ“ [32mXMLPort field attribute with mixed properties[0m
  xmlport_properties:
    744. âœ“ [32mXMLPort Properties[0m
  xmlport_triggers_requestpage_test:
    745. âœ“ [32mXMLPort with trigger in table element[0m
    746. âœ“ [32mXMLPort with requestpage[0m
  xmlport_use_request_page_test:
    747. âœ“ [32mXMLPort UseRequestPage property false[0m
    748. âœ“ [32mXMLPort UseRequestPage property true[0m
    749. âœ“ [32mXMLPort with UseRequestPage and Direction properties[0m
  xor_logical_operator_test:
    750. âœ“ [32mXOR logical operator expressions[0m

2 failures:

correct / [32mexpected[0m / [31munexpected[0m

  1. Conditional object declaration (known limitation):

[31m    (source_file
[0m[31m      (comment)
[0m[31m      (comment)
[0m[31m      (ERROR
[0m[31m        (preproc_if
[0m[31m          (identifier))
[0m[31m        (codeunit_declaration
[0m[31m          (ERROR
[0m[31m            (integer)
[0m[31m            (quoted_identifier)
[0m[31m            (implements_clause
[0m[31m              (quoted_identifier)
[0m[31m              (quoted_identifier))
[0m[31m            (identifier))
[0m[31m          (integer)
[0m[31m          (quoted_identifier)
[0m[31m          (implements_clause
[0m[31m            (quoted_identifier))
[0m[31m          (ERROR)
[0m[31m          (comment))))[0m
[32m    Note: ))[0m


  2. Field Properties:

    (source_file
      (table_declaration
        object_id: (integer)
        object_name: (quoted_identifier)
        (fields
          (field_declaration
            id: (integer)
            name: (quoted_identifier)
            type: (type_specification
              (code_type
                length: (integer)))
            (caption_property
              (string_literal))
            (tool_tip_property
              (tool_tip_value
                (string_literal)))
            (tool_tip_ml_property
              value: (ml_value_list
                (ml_value_pair
                  language: (identifier)
                  value: (string_literal))
                (ml_value_pair
                  language: (identifier)
                  value: (string_literal))))
            (caption_ml_property
              value: (ml_value_list
                (ml_value_pair
                  language: (identifier)
                  value: (string_literal))
                (ml_value_pair
                  language: (identifier)
                  value: (string_literal))))
            (blank_zero_property
              (blank_zero_value
                (boolean)))
            (not_blank_property
              value: (not_blank_value
                (boolean)))
            (auto_increment_property
              value: (value
                (boolean)))
            (access_by_permission_property
              value: (value
                table_name: (identifier)
                permission: (permission_type)))
            (allow_in_customizations_property
              value: (value))
            (auto_format_expression_property
              value: (string_literal))
            (auto_format_type_property
              value: (value))
            (blank_numbers_property
              value: (value
                (identifier)))
            (closing_dates_property
              value: (closing_dates_value
                (boolean)))
            (data_classification_property
[31m              value: (data_classification_value))
[0m[32m              (data_classification_value))
[0m            (table_relation_property
              relation: (table_relation_expression
                (simple_table_relation
                  table: (identifier)
                  field: (field_ref
                    (quoted_identifier)))))
[31m            (empty_statement)
[0m            (char_allowed_property
              value: (value
                (string_literal)))
            (date_formula_property
              value: (date_formula_value
                (boolean)))
            (extended_datatype_property
              value: (extended_datatype_value))
            (compressed_property
              value: (compressed_value
                (boolean)))
            (option_caption_property
              (option_caption_value
                (string_literal)))
[31m            (option_caption_property
[0m[31m              (ERROR
[0m[31m                (identifier)
[0m[31m                (identifier)
[0m[31m                (option_caption_value
[0m[31m                  (string_literal))
[0m[31m                (identifier))
[0m[31m              (option_caption_value
[0m[31m                (string_literal)))))))[0m
[32m            (option_caption_ml_property
[0m[32m              value: (ml_value_list
[0m[32m                (ml_value_pair
[0m[32m                  language: (identifier)
[0m[32m                  value: (string_literal))
[0m[32m                (ml_value_pair
[0m[32m                  language: (identifier)
[0m[32m                  value: (string_literal))))))))[0m

