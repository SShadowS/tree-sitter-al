===================================
Time Literals
===================================

codeunit 50100 MyTimeLiterals
{
    procedure TestTime()
    var
        MyTime: Time;
    begin
        MyTime := 120000T; // Standard time
        MyTime := 0T;      // Zero time
        MyTime := 235959T; // End of day
        // MyTime := -1000T; // Negative time (if supported, currently parsed as unary minus integer + T)
    end;
}

(source_file [0, 0] - [13, 0]
  (codeunit_declaration [5, 0] - [12, 1]
    object_id: (object_id [5, 9] - [5, 14] (integer [5, 9] - [5, 14]))
    object_name: (object_name [5, 15] - [5, 31] name: (identifier [5, 15] - [5, 31]))
    (procedure [7, 4] - [12, 5]
      name: (name [7, 14] - [7, 22])
      (var_section [8, 4] - [9, 23]
        (variable_declaration [9, 8] - [9, 22]
          name: (identifier [9, 8] - [9, 14])
          type: (type_specification [9, 16] - [9, 21] (basic_type [9, 16] - [9, 21]))))
      (code_block [10, 4] - [12, 5]
        (assignment_statement [11, 8] - [11, 25]
          left: (identifier [11, 8] - [11, 14])
          operator: (identifier [11, 15] - [11, 17])
          right: (time_literal [11, 18] - [11, 25]))
        (comment [11, 26] - [11, 41])
        (assignment_statement [12, 8] - [12, 19]
          left: (identifier [12, 8] - [12, 14])
          operator: (identifier [12, 15] - [12, 17])
          right: (time_literal [12, 18] - [12, 19]))
        (comment [12, 20] - [12, 35])
        (assignment_statement [13, 8] - [13, 26]
          left: (identifier [13, 8] - [13, 14])
          operator: (identifier [13, 15] - [13, 17])
          right: (time_literal [13, 18] - [13, 26]))
        (comment [13, 27] - [13, 41])
        (comment [14, 8] - [14, 98])))))

===================================
Date Literals (Implicitly handled by integer/dateformula)
===================================

codeunit 50101 MyDateLiterals
{
    procedure TestDate()
    var
        MyDate: Date;
        MyDateFormula: DateFormula;
    begin
        MyDate := 20240429D; // Standard date (Parsed as integer + D) - Needs datetime_literal rule adjustment if 'D' is mandatory
        MyDateFormula := 1D; // Date formula (Parsed as integer + D) - Needs datetime_literal rule adjustment if 'D' is mandatory
        MyDateFormula := -1W; // Negative date formula (Parsed as unary minus integer + W) - Needs datetime_literal rule adjustment
    end;
}

(source_file [0, 0] - [13, 0]
  (codeunit_declaration [5, 0] - [12, 1]
    object_id: (object_id [5, 9] - [5, 14] (integer [5, 9] - [5, 14]))
    object_name: (object_name [5, 15] - [5, 31] name: (identifier [5, 15] - [5, 31]))
    (procedure [7, 4] - [12, 5]
      name: (name [7, 14] - [7, 22])
      (var_section [8, 4] - [10, 34]
        (variable_declaration [9, 8] - [9, 21]
          name: (identifier [9, 8] - [9, 14])
          type: (type_specification [9, 16] - [9, 20] (basic_type [9, 16] - [9, 20])))
        (variable_declaration [10, 8] - [10, 33]
          name: (identifier [10, 8] - [10, 21])
          type: (type_specification [10, 23] - [10, 33] (basic_type [10, 23] - [10, 33]))))
      (code_block [11, 4] - [12, 5]
        (assignment_statement [12, 8] - [12, 27]
          left: (identifier [12, 8] - [12, 14])
          operator: (identifier [12, 15] - [12, 17])
          right: (duration_literal [12, 18] - [12, 27]))
        (comment [12, 28] - [12, 126])
        (assignment_statement [13, 8] - [13, 28]
          left: (identifier [13, 8] - [13, 21])
          operator: (identifier [13, 22] - [13, 24])
          right: (duration_literal [13, 25] - [13, 27]))
        (comment [13, 28] - [13, 126])
        (assignment_statement [14, 8] - [14, 29]
          left: (identifier [14, 8] - [14, 21])
          operator: (identifier [14, 22] - [14, 24])
          right: (integer [14, 25] - [14, 27]))
        (identifier [14, 27] - [14, 28])
        (comment [14, 29] - [14, 130])))))

===================================
DateTime Literals
===================================

codeunit 50102 MyDateTimeLiterals
{
    procedure TestDateTime()
    var
        MyDateTime: DateTime;
    begin
        MyDateTime := 20240429T120000DT; // Standard datetime
        MyDateTime := 0DT;             // Zero datetime
        // MyDateTime := -1DT;         // Negative datetime (if supported)
    end;
}

(source_file [0, 0] - [12, 0]
  (codeunit_declaration [5, 0] - [11, 1]
    object_id: (object_id [5, 9] - [5, 14] (integer [5, 9] - [5, 14]))
    object_name: (object_name [5, 15] - [5, 35] name: (identifier [5, 15] - [5, 35]))
    (procedure [7, 4] - [11, 5]
      name: (name [7, 14] - [7, 26])
      (var_section [8, 4] - [9, 29]
        (variable_declaration [9, 8] - [9, 28]
          name: (identifier [9, 8] - [9, 18])
          type: (type_specification [9, 20] - [9, 28] (basic_type [9, 20] - [9, 28]))))
      (code_block [10, 4] - [11, 5]
        (assignment_statement [11, 8] - [11, 39]
          left: (identifier [11, 8] - [11, 18])
          operator: (identifier [11, 19] - [11, 21])
          right: (datetime_literal [11, 22] - [11, 39]))
        (comment [11, 40] - [11, 59])
        (assignment_statement [12, 8] - [12, 24]
          left: (identifier [12, 8] - [12, 18])
          operator: (identifier [12, 19] - [12, 21])
          right: (datetime_literal [12, 22] - [12, 24]))
        (comment [12, 25] - [12, 42])
        (comment [13, 8] - [13, 59])))))

===================================
Duration Literals
===================================

codeunit 50103 MyDurationLiterals
{
    procedure TestDuration()
    var
        MyDuration: Duration;
    begin
        MyDuration := 1000D; // Standard duration (milliseconds)
        MyDuration := 0D;    // Zero duration
        MyDuration := -500D; // Negative duration
    end;
}

(source_file [0, 0] - [12, 0]
  (codeunit_declaration [5, 0] - [11, 1]
    object_id: (object_id [5, 9] - [5, 14] (integer [5, 9] - [5, 14]))
    object_name: (object_name [5, 15] - [5, 35] name: (identifier [5, 15] - [5, 35]))
    (procedure [7, 4] - [11, 5]
      name: (name [7, 14] - [7, 28])
      (var_section [8, 4] - [9, 29]
        (variable_declaration [9, 8] - [9, 28]
          name: (identifier [9, 8] - [9, 18])
          type: (type_specification [9, 20] - [9, 28] (basic_type [9, 20] - [9, 28]))))
      (code_block [10, 4] - [11, 5]
        (assignment_statement [11, 8] - [11, 26]
          left: (identifier [11, 8] - [11, 18])
          operator: (identifier [11, 19] - [11, 21])
          right: (duration_literal [11, 22] - [11, 26]))
        (comment [11, 27] - [11, 59])
        (assignment_statement [12, 8] - [12, 23]
          left: (identifier [12, 8] - [12, 18])
          operator: (identifier [12, 19] - [12, 21])
          right: (duration_literal [12, 22] - [12, 23]))
        (comment [12, 24] - [12, 41])
        (assignment_statement [13, 8] - [13, 27]
          left: (identifier [13, 8] - [13, 18])
          operator: (identifier [13, 19] - [13, 21])
          right: (duration_literal [13, 22] - [13, 27]))
        (comment [13, 28] - [13, 47])))))
