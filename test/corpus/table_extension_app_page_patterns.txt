================================================================================
Table with complex field properties and lookup formula
================================================================================

table 6175314 "CDO Extension App Page"
{
    Caption = 'Extension App Page';
    DataClassification = CustomerContent;

    fields
    {
        field(1; "DO Extension App ID"; Guid)
        {
            Caption = 'DO Extension App ID';
            DataClassification = CustomerContent;
            TableRelation = "CDO Extension App";
        }
        field(20; "Page No. to extend"; Integer)
        {
            Caption = 'Page No. to extend';
            DataClassification = CustomerContent;
            TableRelation = AllObjWithCaption."Object ID" where("Object Type" = const(Page));
            trigger OnValidate()
            var
                ExtensionApp: Record "CDO Extension App";
            begin
                CalcFields("Page No. to extend Name");
                ExtensionApp.Get("DO Extension App ID");
                if "Page Extension No." = 0 then
                    "Page Extension No." := ExtensionApp.GetNextPageNo();
                if "Page Extension Name" = '' then
                    "Page Extension Name" := CopyStr(DelChr("Page No. to extend Name", '=', ' ') + 'FactBox', 1, MaxStrLen("Page Extension Name"));
            end;
        }
        field(21; "Page No. to extend Name"; Text[30])
        {
            Caption = 'Page to extend Name';
            Editable = false;
            FieldClass = FlowField;
            CalcFormula = lookup(AllObjWithCaption."Object Name" where("Object Type" = const(Page), "Object ID" = field("Page No. to extend")));
        }
    }
    keys
    {
        key(PK; "DO Extension App ID", "Page No. to extend")
        {
            Clustered = true;
        }
    }
}

--------------------------------------------------------------------------------

(source_file
  (table_declaration
    object_id: (integer)
    object_name: (quoted_identifier)
    (caption_property
      (string_literal))
    (data_classification_property
      value: (data_classification_value))
    (fields
      (field_declaration
        id: (integer)
        name: (quoted_identifier)
        type: (type_specification
          (basic_type))
        (caption_property
          (string_literal))
        (data_classification_property
          value: (data_classification_value))
        (table_relation_property
          relation: (table_relation_expression
            (simple_table_relation
              table: (quoted_identifier))))
        (empty_statement))
      (field_declaration
        id: (integer)
        name: (quoted_identifier)
        type: (type_specification
          (basic_type))
        (caption_property
          (string_literal))
        (data_classification_property
          value: (data_classification_value))
        (table_relation_property
          relation: (table_relation_expression
            (simple_table_relation
              table: (qualified_table_reference
                namespace: (identifier)
                part: (quoted_identifier))
              (where_clause
                conditions: (where_conditions
                  (where_condition
                    (const_filter
                      field: (field_ref
                        (quoted_identifier))
                      value: (identifier))))))))
        (empty_statement)
        (field_trigger_declaration
          type: (trigger_type)
          (var_section
            (variable_declaration
              name: (identifier)
              type: (type_specification
                (record_type
                  reference: (quoted_identifier)))))
          (code_block
            (call_expression
              function: (identifier)
              arguments: (argument_list
                (quoted_identifier)))
            (call_expression
              function: (member_expression
                object: (identifier)
                property: (identifier))
              arguments: (argument_list
                (quoted_identifier)))
            (if_statement
              condition: (comparison_expression
                left: (quoted_identifier)
                operator: (comparison_operator)
                right: (integer))
              then_branch: (assignment_expression
                left: (quoted_identifier)
                right: (call_expression
                  function: (member_expression
                    object: (identifier)
                    property: (identifier))
                  arguments: (argument_list))))
            (if_statement
              condition: (comparison_expression
                left: (quoted_identifier)
                operator: (comparison_operator)
                right: (string_literal))
              then_branch: (assignment_expression
                left: (quoted_identifier)
                right: (call_expression
                  function: (identifier)
                  arguments: (argument_list
                    (additive_expression
                      left: (call_expression
                        function: (identifier)
                        arguments: (argument_list
                          (quoted_identifier)
                          (string_literal)
                          (string_literal)))
                      right: (string_literal))
                    (integer)
                    (call_expression
                      function: (identifier)
                      arguments: (argument_list
                        (quoted_identifier))))))))))
      (field_declaration
        id: (integer)
        name: (quoted_identifier)
        type: (type_specification
          (text_type
            length: (integer)))
        (caption_property
          (string_literal))
        (editable_property
          value: (boolean))
        (field_class_property
          value: (field_class_value))
        (calc_formula_property
          (lookup_formula
            target: (field_access
              record: (identifier)
              field: (quoted_identifier))
            (lookup_where_conditions
              (lookup_where_condition
                field: (field_ref
                  (quoted_identifier))
                keyword: (const)
                value: (identifier))
              (lookup_where_condition
                field: (field_ref
                  (quoted_identifier))
                value: (field_ref
                  (quoted_identifier))))))))
    (keys
      (key_declaration
        name: (name)
        fields: (key_field_list
          (quoted_identifier)
          (quoted_identifier))
        (clustered_property
          value: (boolean))))))
