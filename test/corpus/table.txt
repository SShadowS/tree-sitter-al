==================
 Simple Table Test
==================

table 50100 "My Test Table"
{
    Caption = 'My Test Table';
    DataClassification = CustomerContent;

    fields
    {
        field(1; "Primary Key"; Code[20])
        {
            Caption = 'Primary Key';
            DataClassification = CustomerContent;
        }
        field(2; Description; Text[100])
        {
            Caption = 'Description';
        }
        field(3; Amount; Decimal)
        {
            Caption = 'Amount';
            DecimalPlaces = 2:2;
        }
    }

    keys
    {
        key(PK; "Primary Key")
        {
            Clustered = true;
        }
    }

    var
        myInt: Integer;

    trigger OnInsert()
    begin
        Message('Record inserted');
    end;

    procedure MyProcedure(param: Text): Boolean
    begin
        if param <> '' then
            exit(true)
        else
            exit(false);
    end;
}

---

(source_file
  (table_declaration
    (object_id
      (integer))
    (object_name
      (quoted_identifier))
    (caption_property
      (string_literal))
    (data_classification_property
      (data_classification_value))
    (fields
      (field_declaration
        (integer)
        (quoted_identifier)
        (type_specification
          (code_type
            (integer)))
        (caption_property
          (string_literal))
        (data_classification_property
          (data_classification_value)))
      (field_declaration
        (integer)
        (identifier)
        (type_specification
          (text_type
            (integer)))
        (caption_property
          (string_literal)))
      (field_declaration
        (integer)
        (identifier)
        (type_specification
          (basic_type))
        (caption_property
          (string_literal))
        (decimal_places_property
          (integer)
          (integer))))
    (keys
      (key_declaration
        (name)
        (key_field_list
          (quoted_identifier))
        (clustered_property
          (boolean))))
    (var_section
      (variable_declaration
        (identifier)
        (type_specification
              (basic_type))))
    (oninsert_trigger
      (code_block
        (procedure_call
          (identifier)
          (argument_list
            (string_literal)))))
    (procedure
      (name)
      (parameter_list
        (parameter
          (name)
          (type)))
      (return_type
        (basic_type))
      (code_block
        (if_statement
          (binary_expression
            (identifier)
            (comparison_operator)
            (string_literal))
          (procedure_call
            (identifier)
            (argument_list
              (boolean)))
          (procedure_call
            (identifier)
            (argument_list
              (boolean))))))))
