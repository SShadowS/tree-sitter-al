================================================================================
SubPageView with sorting and where clause
================================================================================

pageextension 123 TestExt extends TestPage
{
    layout
    {
        addlast(factboxes)
        {
            part(TestPart; "Test Page")
            {
                SubPageView = sorting("Field1", "Field2") 
                              where("Field3" = const(123), "Field4" = filter('A..Z'));
            }
        }
    }
}

--------------------------------------------------------------------------------

(source_file
  (pageextension_declaration
    object_id: (integer)
    object_name: (identifier)
    base_object: (identifier)
    (layout_section
      (addlast_layout_modification
        target: (identifier)
        (part_section
          name: (identifier)
          page_name: (quoted_identifier)
          (sub_page_view_property
            value: (source_table_view_value
              (sorting_clause
                fields: (field_reference_list
                  (field_reference
                    (quoted_identifier))
                  (field_reference
                    (quoted_identifier))))
              (where_clause
                conditions: (where_conditions
                  (where_condition
                    (const_filter
                      field: (field_ref
                        (quoted_identifier))
                      value: (integer)))
                  (where_condition
                    (filter_condition
                      field: (field_ref
                        (quoted_identifier))
                      filter: (filter_expression_function
                        value: (string_literal)))))))))))))

================================================================================
SubPageView with simple sorting only
================================================================================

pageextension 456 SimpleExt extends SimplePage
{
    layout
    {
        addlast(Control1)
        {
            part(SimplePart; "Simple Page")
            {
                SubPageView = sorting("Name", "No.");
            }
        }
    }
}

--------------------------------------------------------------------------------

(source_file
  (pageextension_declaration
    object_id: (integer)
    object_name: (identifier)
    base_object: (identifier)
    (layout_section
      (addlast_layout_modification
        target: (identifier)
        (part_section
          name: (identifier)
          page_name: (quoted_identifier)
          (sub_page_view_property
            value: (source_table_view_value
              (sorting_clause
                fields: (field_reference_list
                  (field_reference
                    (quoted_identifier))
                  (field_reference
                    (quoted_identifier)))))))))))

================================================================================
SubPageView with where clause only
================================================================================

pageextension 789 WhereExt extends WherePage
{
    layout
    {
        addafter(Control1)
        {
            part(WherePart; "Where Page")
            {
                SubPageView = where("Status" = const(Open), "Type" = filter(<>Closed));
            }
        }
    }
}

--------------------------------------------------------------------------------

(source_file
  (pageextension_declaration
    object_id: (integer)
    object_name: (identifier)
    base_object: (identifier)
    (layout_section
      (addafter_layout_modification
        target: (identifier)
        (part_section
          name: (identifier)
          page_name: (quoted_identifier)
          (sub_page_view_property
            value: (source_table_view_value
              (where_clause
                conditions: (where_conditions
                  (where_condition
                    (const_filter
                      field: (field_ref
                        (quoted_identifier))
                      value: (identifier)))
                  (where_condition
                    (filter_condition
                      field: (field_ref
                        (quoted_identifier))
                      filter: (filter_expression_function
                        value: (filter_not_equal_expression
                          value: (identifier))))))))))))))

================================================================================
SubPageView with string literal value
================================================================================

pageextension 101 StringExt extends StringPage
{
    layout
    {
        addlast(factboxes)
        {
            part(StringPart; "String Page")
            {
                SubPageView = 'Ascending';
            }
        }
    }
}

--------------------------------------------------------------------------------

(source_file
  (pageextension_declaration
    object_id: (integer)
    object_name: (identifier)
    base_object: (identifier)
    (layout_section
      (addlast_layout_modification
        target: (identifier)
        (part_section
          name: (identifier)
          page_name: (quoted_identifier)
          (sub_page_view_property
            value: (string_literal)))))))

================================================================================
SubPageView with identifier value
================================================================================

pageextension 202 IdentExt extends IdentPage
{
    layout
    {
        addlast(factboxes)
        {
            part(IdentPart; "Ident Page")
            {
                SubPageView = Descending;
            }
        }
    }
}

--------------------------------------------------------------------------------

(source_file
  (pageextension_declaration
    object_id: (integer)
    object_name: (identifier)
    base_object: (identifier)
    (layout_section
      (addlast_layout_modification
        target: (identifier)
        (part_section
          name: (identifier)
          page_name: (quoted_identifier)
          (sub_page_view_property
            value: (identifier)))))))
