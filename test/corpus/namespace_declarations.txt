================================================================================
Simple namespace with single identifier
================================================================================

namespace MyCompany;

codeunit 50000 "Test Codeunit"
{
    procedure DoSomething()
    begin
    end;
}

--------------------------------------------------------------------------------

(source_file
  (namespace_declaration
    name: (namespace_name
      (identifier)))
  (codeunit_declaration
    object_id: (integer)
    object_name: (quoted_identifier)
    (attributed_procedure
      (procedure
        name: (name
          (identifier))
        (code_block)))))

================================================================================
Namespace with dotted path and page extension
================================================================================

namespace Continia.DocumentCapture.User;
pageextension 50001 "Test Extension" extends "Base Page"
{
    layout
    {
        addafter(field1)
        {
            field(NewField; NewField)
            {
                ApplicationArea = All;
            }
        }
    }
}

--------------------------------------------------------------------------------

(source_file
  (namespace_declaration
    name: (namespace_name
      (identifier)
      (identifier)
      (identifier)))
  (pageextension_declaration
    object_id: (integer)
    object_name: (quoted_identifier)
    base_object: (quoted_identifier)
    (layout_section
      (addafter_layout_modification
        target: (identifier)
        (field_section
          control_id: (identifier)
          source_or_field_name: (identifier)
          (application_area_property
            value: (identifier)))))))

================================================================================
Namespace with table declaration
================================================================================

namespace Company.Module.Feature;

table 50002 "Test Table"
{
    fields
    {
        field(1; "Primary Key"; Code[20])
        {
            Caption = 'Primary Key';
        }
    }
}

--------------------------------------------------------------------------------

(source_file
  (namespace_declaration
    name: (namespace_name
      (identifier)
      (identifier)
      (identifier)))
  (table_declaration
    object_id: (integer)
    object_name: (quoted_identifier)
    (fields
      (field_declaration
        id: (integer)
        name: (quoted_identifier)
        type: (type_specification
          (code_type
            length: (integer)))
        (caption_property
          (string_literal))))))

================================================================================
Long namespace path with multiple dots
================================================================================

namespace Microsoft.Dynamics.BusinessCentral.ExtensionFramework.Samples;

enum 50003 "Sample Enum"
{
    Extensible = true;
    
    value(0; None)
    {
        Caption = 'None';
    }
}

--------------------------------------------------------------------------------

(source_file
  (namespace_declaration
    name: (namespace_name
      (identifier)
      (identifier)
      (identifier)
      (identifier)
      (identifier)))
  (enum_declaration
    object_id: (integer)
    object_name: (quoted_identifier)
    (extensible_property
      value: (extensible_value
        (boolean)))
    (enum_value_declaration
      value_id: (integer)
      value_name: (identifier)
      (caption_property
        (string_literal)))))

================================================================================
File without namespace (backwards compatibility)
================================================================================

report 50004 "Test Report"
{
    dataset
    {
        dataitem(Integer; Integer)
        {
            column(Number; Number)
            {
            }
        }
    }
}

--------------------------------------------------------------------------------

(source_file
  (report_declaration
    object_id: (integer)
    object_name: (quoted_identifier)
    (dataset_section
      (report_dataitem_section
        name: (identifier)
        (identifier)
        (report_column_section
          name: (identifier)
          source: (identifier))))))

================================================================================
Namespace with permissionset
================================================================================

namespace Security.Permissions;

permissionset 50005 "Sample Permissions"
{
    Access = Internal;
    Assignable = true;
    
    Permissions =
        tabledata "Test Table" = R;
}

--------------------------------------------------------------------------------

(source_file
  (namespace_declaration
    name: (namespace_name
      (identifier)
      (identifier)))
  (permissionset_declaration
    object_id: (integer)
    object_name: (quoted_identifier)
    (access_property
      value: (value))
    (assignable_property
      value: (boolean))
    (permissionset_permissions
      (permission_list
        (permission_entry
          object_type: (identifier)
          object_reference: (quoted_identifier)
          permission: (permission_type))))))
