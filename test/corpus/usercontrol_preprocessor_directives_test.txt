================================================================================
Usercontrol with preprocessor directives
================================================================================

page 50100 "Test Page"
{
    layout
    {
        area(content)
        {
            usercontrol(ResizeHandle; "CDC Factbox Page Handle AddIn")
            {
#if BC26
                Visible = false;
#endif
                ApplicationArea = All;
                trigger AddInReady()
                var
                    UserPersonalisationMgt: Codeunit "CDC User Personalisation Mgt.";
                begin
                    if UserPersonalisationMgt.Get('Test', PageName) then
                        UserPersonalisationMgt.SetCaptureUIPercentageWidth(50.0, Page::"Test Page");
                end;
            }
        }
    }
}

--------------------------------------------------------------------------------

(source_file
  (page_declaration
    object_id: (integer)
    object_name: (quoted_identifier)
    (layout_section
      (area_section
        (usercontrol_section
          control_id: (identifier)
          addin_name: (quoted_identifier)
          (preproc_conditional_group_content
            (preproc_if
              condition: (identifier))
            (visible_property
              value: (boolean))
            (preproc_endif))
          (application_area_property
            value: (identifier))
          (trigger_declaration
            name: (trigger_name)
            (var_section
              (variable_declaration
                name: (identifier)
                type: (type_specification
                  (codeunit_type
                    reference: (quoted_identifier)))))
            (code_block
              (if_statement
                condition: (call_expression
                  function: (member_expression
                    object: (identifier)
                    property: (identifier))
                  arguments: (argument_list
                    (string_literal)
                    (identifier)))
                then_branch: (call_expression
                  function: (member_expression
                    object: (identifier)
                    property: (identifier))
                  arguments: (argument_list
                    (decimal)
                    (qualified_enum_value
                      enum_type: (identifier)
                      value: (quoted_identifier))))))))))))
