================================================================================
Page with region directives for code organization
================================================================================

page 50100 "Manufacturing Factbox"
{
    PageType = CardPart;
    SourceTable = "Prod. Order Component";

    layout
    {
        area(content)
        {
            field("Item No."; Rec."Item No.")
            {
                ApplicationArea = Manufacturing;
                ToolTip = 'Specifies the item number.';
            }
            field("Quantity"; Rec.Quantity)
            {
                ApplicationArea = Manufacturing;
            }
        }
    }

    var
        Item: Record Item;

    #region Private Methods
    local procedure GetItem(): Boolean
    begin
        if Rec."Item No." <> '' then
            exit(Item.Get(Rec."Item No."));
        exit(false);
    end;

    local procedure ShowNo(): Code[20]
    begin
        if Rec."Item No." = '' then
            exit('');
        exit(Rec."Item No.");
    end;
    #endregion

    #region Event Handlers
    trigger OnAfterGetCurrRecord()
    begin
        GetItem();
    end;
    #endregion
}

--------------------------------------------------------------------------------

(source_file
  (page_declaration
    object_id: (integer)
    object_name: (quoted_identifier)
    (page_type_property)
    (source_table_property
      value: (quoted_identifier))
    (layout_section
      (area_section
        (field_section
          control_id: (quoted_identifier)
          source_or_field_name: (field_access
            record: (identifier)
            field: (quoted_identifier))
          (application_area_property
            value: (identifier))
          (tool_tip_property
            (tool_tip_value
              (string_literal))))
        (field_section
          control_id: (quoted_identifier)
          source_or_field_name: (member_expression
            object: (identifier)
            property: (identifier))
          (application_area_property
            value: (identifier)))))
    (var_section
      (variable_declaration
        name: (identifier)
        type: (type_specification
          (record_type
            reference: (identifier)))))
    (preproc_region)
    (procedure
      modifier: (procedure_modifier)
      name: (name
        (identifier))
      return_type: (return_type
        (type_specification
          (basic_type)))
      (code_block
        (if_statement
          condition: (comparison_expression
            left: (field_access
              record: (identifier)
              field: (quoted_identifier))
            operator: (comparison_operator)
            right: (string_literal))
          then_branch: (exit_statement
            return_value: (call_expression
              function: (member_expression
                object: (identifier)
                property: (identifier))
              arguments: (argument_list
                (field_access
                  record: (identifier)
                  field: (quoted_identifier))))))
        (exit_statement
          return_value: (boolean))))
    (procedure
      modifier: (procedure_modifier)
      name: (name
        (identifier))
      return_type: (return_type
        (type_specification
          (code_type
            length: (integer))))
      (code_block
        (if_statement
          condition: (comparison_expression
            left: (field_access
              record: (identifier)
              field: (quoted_identifier))
            operator: (comparison_operator)
            right: (string_literal))
          then_branch: (exit_statement
            return_value: (string_literal)))
        (exit_statement
          return_value: (field_access
            record: (identifier)
            field: (quoted_identifier)))))
    (preproc_endregion)
    (preproc_region)
    (trigger_declaration
      name: (trigger_name)
      (code_block
        (call_expression
          function: (identifier)
          arguments: (argument_list))))
    (preproc_endregion)))
