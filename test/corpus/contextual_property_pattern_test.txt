================================================================================
Contextual Property Pattern - Documentation Test
================================================================================

page 50000 TestPage
{
    IsPreview = true;
    
    var
        IsPreview: Boolean;
        Style: Option None,Bold,Italic;
        StyleExpr: Text[30];
        TableType: Enum "Table Type";
}

--------------------------------------------------------------------------------

(source_file
  (page_declaration
    object_id: (integer)
    object_name: (identifier)
    (is_preview_property
      value: (boolean))
    (var_section
      (variable_declaration
        name: (identifier)
        type: (type_specification
          (basic_type)))
      (variable_declaration
        name: (identifier)
        type: (type_specification
          (option_type
            (option_member_list
              (option_member
                (identifier))
              (option_member
                (identifier))
              (option_member
                (identifier))))))
      (variable_declaration
        name: (identifier)
        type: (type_specification
          (text_type
            length: (integer))))
      (variable_declaration
        name: (identifier)
        type: (type_specification
          (enum_type
            enum_name: (quoted_identifier)))))))

================================================================================
All contextual properties in _unquoted_variable_name
================================================================================

codeunit 50000 TestVariableNames
{
    var
        IsPreview: Boolean;
        Style: Text;
        StyleExpr: Code[20];
        TableType: Option Normal,Temporary;
        Description: Text[100];
        Caption: Label 'Test';
        Width: Decimal;
        End: DateTime;
}

--------------------------------------------------------------------------------

(source_file
  (codeunit_declaration
    object_id: (integer)
    object_name: (identifier)
    (var_section
      (variable_declaration
        name: (identifier)
        type: (type_specification
          (basic_type)))
      (variable_declaration
        name: (identifier)
        type: (type_specification
          (text_type)))
      (variable_declaration
        name: (identifier)
        type: (type_specification
          (code_type
            length: (integer))))
      (variable_declaration
        name: (identifier)
        type: (type_specification
          (option_type
            (option_member_list
              (option_member
                (identifier)))))
        temporary: (temporary))
      (variable_declaration
        name: (identifier)
        type: (type_specification
          (text_type
            length: (integer))))
      (variable_declaration
        name: (identifier)
        type: (basic_type)
        value: (string_literal))
      (variable_declaration
        name: (identifier)
        type: (type_specification
          (basic_type)))
      (variable_declaration
        name: (identifier)
        type: (type_specification
          (basic_type))))))

================================================================================
Mixed case handling for contextual properties
================================================================================

table 50000 TestTable
{
    TableType = External;
    
    fields
    {
        field(1; ID; Integer)
        {
        }
    }
    
    var
        tabletype: Text;
        TABLETYPE: Integer;
        TableType: Code[10];
        Tabletype: Boolean;
}

--------------------------------------------------------------------------------

(source_file
  (table_declaration
    object_id: (integer)
    object_name: (identifier)
    (table_type_property
      value: (value))
    (fields
      (field_declaration
        id: (integer)
        name: (identifier)
        type: (type_specification
          (basic_type))))
    (var_section
      (variable_declaration
        name: (identifier)
        type: (type_specification
          (text_type)))
      (variable_declaration
        name: (identifier)
        type: (type_specification
          (basic_type)))
      (variable_declaration
        name: (identifier)
        type: (type_specification
          (code_type
            length: (integer))))
      (variable_declaration
        name: (identifier)
        type: (type_specification
          (basic_type))))))
