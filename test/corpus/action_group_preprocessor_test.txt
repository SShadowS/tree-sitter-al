==================
Action group with preprocessor conditional actionref
==================

page 50000 "Extension Management"
{
    actions
    {
        area(Promoted)
        {
            group(Category_Manage)
            {
                Caption = 'Manage';
#if not CLEAN25
#pragma warning disable AL0432
                actionref("Extension Marketplace_Promoted"; "Extension Marketplace")
#pragma warning restore AL0432
                {
                    ObsoleteState = Pending;
                    ObsoleteReason = 'This action will be obsoleted.';
                    ObsoleteTag = '25.0';
                    Visible = false;
                }
#endif
                actionref("Upload Extension_Promoted"; "Upload Extension") { }
            }
        }
    }
}

---

(source_file
  (page_declaration
    object_id: (integer)
    object_name: (quoted_identifier)
    (actions_section
      (area_action_section
        (action_group_section
          name: (identifier)
          (caption_property
            (string_literal))
          (preproc_conditional_actions
            (preproc_if
              condition: (preproc_not_expression
                (identifier)))
            (pragma)
            (actionref_declaration
              promoted_name: (quoted_identifier)
              action_name: (quoted_identifier)
              (pragma)
              (obsolete_state_property
                value: (obsolete_state_value))
              (obsolete_reason_property
                value: (obsolete_reason_value
                  (string_literal)))
              (obsolete_tag_property
                value: (obsolete_tag_value
                  (string_literal)))
              (visible_property
                value: (boolean)))
            (preproc_endif))
          (actionref_declaration
            promoted_name: (quoted_identifier)
            action_name: (quoted_identifier)))))))

==================
Nested action groups with preprocessor conditionals
==================

page 50001 "Test Page"
{
    actions
    {
        area(processing)
        {
            group(OuterGroup)
            {
                Caption = 'Outer';
                group(InnerGroup)
                {
                    Caption = 'Inner';
#if CLEAN23
                    action(NewAction)
                    {
                        Caption = 'New Action';
                    }
#else
                    action(OldAction)
                    {
                        Caption = 'Old Action';
                        ObsoleteState = Pending;
                    }
#endif
                }
            }
        }
    }
}

---

(source_file
  (page_declaration
    object_id: (integer)
    object_name: (quoted_identifier)
    (actions_section
      (area_action_section
        (action_group_section
          name: (identifier)
          (caption_property
            (string_literal))
          (action_group_section
            name: (identifier)
            (caption_property
              (string_literal))
            (preproc_conditional_actions
              (preproc_if
                condition: (identifier))
              (action_declaration
                name: (identifier)
                (caption_property
                  (string_literal)))
              (preproc_else)
              (action_declaration
                name: (identifier)
                (caption_property
                  (string_literal))
                (obsolete_state_property
                  value: (obsolete_state_value)))
              (preproc_endif))))))))
