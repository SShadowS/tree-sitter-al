================================================================================
CalcFormula with namespace-qualified table name
================================================================================

table 39 "Purchase Line"
{
    fields
    {
        field(2677; "Alloc. Acc. Modified by User"; Boolean)
        {
            Caption = 'Allocation Account Distributions Modified';
            FieldClass = FlowField;
            CalcFormula = exist(Microsoft.Finance.AllocationAccount."Alloc. Acc. Manual Override" where("Parent System Id" = field(SystemId), "Parent Table Id" = const(Database::"Purchase Line")));
        }
    }
}

--------------------------------------------------------------------------------

(source_file
  (table_declaration
    object_id: (integer)
    object_name: (quoted_identifier)
    (fields
      (field_declaration
        id: (integer)
        name: (quoted_identifier)
        type: (type_specification
          (boolean_type))
        (caption_property
          (string_literal))
        (field_class_property
          value: (field_class_value))
        (calc_formula_property
          (exist_formula
            table: (table_reference
              (qualified_table_reference
                namespace: (identifier)
                part: (identifier)
                part: (identifier)
                part: (quoted_identifier)))
            (where_clause
              conditions: (where_conditions
                (where_condition
                  (const_filter
                    field: (field_ref
                      (quoted_identifier))
                    condition: (filter_expression
                      operator: (relational_operator)
                      value: (field_expression
                        field: (field_ref
                          (identifier))))))
                (where_condition
                  (const_filter
                    field: (field_ref
                      (quoted_identifier))
                    condition: (filter_expression
                      operator: (relational_operator
                        (const_expression
                          const: (identifier)
                          value: (qualified_identifier
                            (identifier)
                            (quoted_identifier))))))))))))))

================================================================================
CalcFormula with different namespace variations
================================================================================

table 50000 TestTable
{
    fields
    {
        field(1; FlowField1; Boolean)
        {
            FieldClass = FlowField;
            CalcFormula = exist(Microsoft.Sales."Sales Header" where("Document Type" = const(Order)));
        }
        field(2; FlowField2; Boolean)
        {
            FieldClass = FlowField;
            CalcFormula = exist(System.Security.User where("User Name" = field(UserId)));
        }
        field(3; FlowField3; Boolean)
        {
            FieldClass = FlowField;
            CalcFormula = exist(A.B.C.D.TableName where(Id = field(Id)));
        }
    }
}

--------------------------------------------------------------------------------

(source_file
  (table_declaration
    object_id: (integer)
    object_name: (identifier)
    (fields
      (field_declaration
        id: (integer)
        name: (identifier)
        type: (type_specification
          (boolean_type))
        (field_class_property
          value: (field_class_value))
        (calc_formula_property
          (exist_formula
            table: (table_reference
              (qualified_table_reference
                namespace: (identifier)
                part: (identifier)
                part: (quoted_identifier)))
            (where_clause
              conditions: (where_conditions
                (where_condition
                  (const_filter
                    field: (field_ref
                      (quoted_identifier))
                    condition: (filter_expression
                      operator: (relational_operator
                        (const_expression
                          const: (identifier)
                          value: (identifier)))))))))))
      (field_declaration
        id: (integer)
        name: (identifier)
        type: (type_specification
          (boolean_type))
        (field_class_property
          value: (field_class_value))
        (calc_formula_property
          (exist_formula
            table: (table_reference
              (qualified_table_reference
                namespace: (identifier)
                part: (identifier)
                part: (identifier)))
            (where_clause
              conditions: (where_conditions
                (where_condition
                  (const_filter
                    field: (field_ref
                      (quoted_identifier))
                    condition: (filter_expression
                      operator: (relational_operator)
                      value: (field_expression
                        field: (field_ref
                          (identifier)))))))))))
      (field_declaration
        id: (integer)
        name: (identifier)
        type: (type_specification
          (boolean_type))
        (field_class_property
          value: (field_class_value))
        (calc_formula_property
          (exist_formula
            table: (table_reference
              (qualified_table_reference
                namespace: (identifier)
                part: (identifier)
                part: (identifier)
                part: (identifier)
                part: (identifier)))
            (where_clause
              conditions: (where_conditions
                (where_condition
                  (const_filter
                    field: (field_ref
                      (identifier))
                    condition: (filter_expression
                      operator: (relational_operator)
                      value: (field_expression
                        field: (field_ref
                          (identifier))))))))))))))

================================================================================
CalcFormula with sum and namespace tables
================================================================================

table 50001 TestTable2
{
    fields
    {
        field(1; Total; Decimal)
        {
            FieldClass = FlowField;
            CalcFormula = sum(Microsoft.Finance.GLEntry.Amount where("Posting Date" = field(Date)));
        }
    }
}

--------------------------------------------------------------------------------

(source_file
  (table_declaration
    object_id: (integer)
    object_name: (identifier)
    (fields
      (field_declaration
        id: (integer)
        name: (identifier)
        type: (type_specification
          (decimal_type))
        (field_class_property
          value: (field_class_value))
        (calc_formula_property
          (sum_formula
            table: (table_reference
              (qualified_table_reference
                namespace: (identifier)
                part: (identifier)
                part: (identifier)))
            field: (identifier)
            (where_clause
              conditions: (where_conditions
                (where_condition
                  (const_filter
                    field: (field_ref
                      (quoted_identifier))
                    condition: (filter_expression
                      operator: (relational_operator)
                      value: (field_expression
                        field: (field_ref
                          (identifier)))))))))))))