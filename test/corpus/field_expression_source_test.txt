================================================================================
Field with complex expression as source
================================================================================

page 50000 "Test Page"
{
    layout
    {
        area(content)
        {
            field("EndTime"; Format(Rec."End Time", 0, '<Year4>-<Month,2>-<Day,2> <Hours24>:<Minutes,2>:<Seconds,2><Second dec.>'))
            {
                Caption = 'End Time';
            }
        }
    }
}

--------------------------------------------------------------------------------

(source_file
  (page_declaration
    object_id: (integer)
    object_name: (quoted_identifier)
    (layout_section
      (area_section
        (field_section
          control_id: (quoted_identifier)
          source_or_field_name: (call_expression
            function: (identifier)
            arguments: (argument_list
              (field_access
                record: (identifier)
                field: (quoted_identifier))
              (integer)
              (string_literal)))
          (caption_property
            (string_literal)))))))

================================================================================
Field with nested function calls as source
================================================================================

page 50001 "Test Page 2"
{
    layout
    {
        area(content)
        {
            field("CalculatedValue"; Round(Abs(Rec.Amount * Rec.Quantity), 0.01))
            {
                Caption = 'Total';
            }
        }
    }
}

--------------------------------------------------------------------------------

(source_file
  (page_declaration
    object_id: (integer)
    object_name: (quoted_identifier)
    (layout_section
      (area_section
        (field_section
          control_id: (quoted_identifier)
          source_or_field_name: (call_expression
            function: (identifier)
            arguments: (argument_list
              (call_expression
                function: (identifier)
                arguments: (argument_list
                  (multiplicative_expression
                    left: (member_expression
                      object: (identifier)
                      property: (identifier))
                    right: (member_expression
                      object: (identifier)
                      property: (identifier)))))
              (decimal)))
          (caption_property
            (string_literal)))))))

================================================================================
Field with binary expression as source
================================================================================

page 50002 "Test Page 3"
{
    layout
    {
        area(content)
        {
            field("IsActive"; Rec.Status = Rec.Status::Active)
            {
                Caption = 'Is Active';
            }
        }
    }
}

--------------------------------------------------------------------------------

(source_file
  (page_declaration
    object_id: (integer)
    object_name: (quoted_identifier)
    (layout_section
      (area_section
        (field_section
          control_id: (quoted_identifier)
          source_or_field_name: (comparison_expression
            left: (member_expression
              object: (identifier)
              property: (identifier))
            operator: (comparison_operator)
            right: (qualified_enum_value
              enum_type: (member_expression
                object: (identifier)
                property: (identifier))
              value: (identifier)))
          (caption_property
            (string_literal)))))))
