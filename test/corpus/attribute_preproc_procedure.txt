================================================================================
Var section followed by attributed procedure in preprocessor
================================================================================

table 50000 "Test"
{
    var
        GlobalVar: Record "Test Record";
        Helper: Codeunit "Test Helper";

#if not CLEAN24
    [Obsolete('Field length will be increased', '24.0')]
    procedure TestProc(Param: Text[30]) Result: Text
#else
    procedure TestProc(Param: Text[50]) Result: Text
#endif
    var
        LocalVar: Text;
    begin
        Result := Param;
    end;
}

--------------------------------------------------------------------------------

(source_file
  (table_declaration
    object_id: (integer)
    object_name: (quoted_identifier)
    (var_section
      (variable_declaration
        name: (identifier)
        type: (type_specification
          (record_type
            reference: (quoted_identifier))))
      (variable_declaration
        name: (identifier)
        type: (type_specification
          (codeunit_type
            reference: (quoted_identifier)))))
    (attributed_procedure
      (preproc_attributed_split_procedure
        (preproc_if
          condition: (preproc_not_expression
            (identifier)))
        if_branch: (attribute_list
          (attribute
            attribute_name: (identifier)
            (attribute_arguments
              arguments: (expression_list
                (string_literal)
                (string_literal)))))
        if_branch: (procedure_header
          name: (name
            (identifier))
          (parameter_list
            (parameter
              parameter_name: (name
                (identifier))
              parameter_type: (type_specification
                (text_type
                  length: (integer)))))
          (return_value
            return_value: (identifier))
          return_type: (return_type
            (type_specification
              (text_type))))
        (preproc_else)
        else_header: (procedure_header
          name: (name
            (identifier))
          (parameter_list
            (parameter
              parameter_name: (name
                (identifier))
              parameter_type: (type_specification
                (text_type
                  length: (integer)))))
          (return_value
            return_value: (identifier))
          return_type: (return_type
            (type_specification
              (text_type))))
        (preproc_endif)
        (var_section
          (variable_declaration
            name: (identifier)
            type: (type_specification
              (text_type))))
        (code_block
          (assignment_expression
            left: (identifier)
            right: (identifier)))))))

================================================================================
Multiple attributes in preprocessor branch
================================================================================

table 50000 "Test Table"
{
    fields
    {
        field(1; "ID"; Integer) { }
    }

#if CLEAN24
    [NonDebuggable]
    [Scope('OnPrem')]
    [Obsolete('Use new version', '24.0')]
    procedure TestProcNew()
#else
    [Scope('Cloud')]
    procedure TestProcOld()
#endif
    begin
        Message('Test');
    end;
}

--------------------------------------------------------------------------------

(source_file
  (table_declaration
    object_id: (integer)
    object_name: (quoted_identifier)
    (fields
      (field_declaration
        id: (integer)
        name: (quoted_identifier)
        type: (type_specification
          (basic_type))))
    (attributed_procedure
      (preproc_attributed_split_procedure
        (preproc_if
          condition: (identifier))
        if_branch: (attribute_list
          (attribute
            attribute_name: (identifier))
          (attribute
            attribute_name: (identifier)
            (attribute_arguments
              arguments: (expression_list
                (string_literal))))
          (attribute
            attribute_name: (identifier)
            (attribute_arguments
              arguments: (expression_list
                (string_literal)
                (string_literal)))))
        if_branch: (procedure_header
          name: (name
            (identifier)))
        (preproc_else)
        else_header: (attribute_list
          (attribute
            attribute_name: (identifier)
            (attribute_arguments
              arguments: (expression_list
                (string_literal)))))
        else_header: (procedure_header
          name: (name
            (identifier)))
        (preproc_endif)
        (code_block
          (call_expression
            function: (identifier)
            arguments: (argument_list
              (string_literal))))))))

================================================================================
Attribute with split procedure header
================================================================================

table 50000 "Test"
{
    var
        Config: Record "Config";

    [BusinessEvent(false, false)]
#if CLEAN25
    procedure OnBeforeAction(var Rec: Record "Test"; var IsHandled: Boolean)
#else  
    procedure OnBeforeAction(var Rec: Record "Test")
#endif
    begin
        // Event
    end;
}

--------------------------------------------------------------------------------

(source_file
  (table_declaration
    object_id: (integer)
    object_name: (quoted_identifier)
    (var_section
      (variable_declaration
        name: (identifier)
        type: (type_specification
          (record_type
            reference: (quoted_identifier)))))
    (attributed_procedure
      (attribute_list
        (attribute
          attribute_name: (identifier)
          (attribute_arguments
            arguments: (expression_list
              (boolean)
              (boolean)))))
      (preproc_split_procedure
        (preproc_if
          condition: (identifier))
        if_header: (procedure_header
          name: (name
            (identifier))
          (parameter_list
            (parameter
              modifier: (modifier)
              parameter_name: (name
                (identifier))
              parameter_type: (type_specification
                (record_type
                  reference: (quoted_identifier))))
            (parameter
              modifier: (modifier)
              parameter_name: (name
                (identifier))
              parameter_type: (type_specification
                (basic_type)))))
        (preproc_else)
        else_header: (procedure_header
          name: (name
            (identifier))
          (parameter_list
            (parameter
              modifier: (modifier)
              parameter_name: (name
                (identifier))
              parameter_type: (type_specification
                (record_type
                  reference: (quoted_identifier))))))
        (preproc_endif)
        (code_block
          (comment))))))
