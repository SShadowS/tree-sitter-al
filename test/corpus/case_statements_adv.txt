==================
Simple case with single statement branches adv
==================

table 50000 "Test Table"
{
    trigger OnInsert()
    begin
        case Type of
            Type::A:
                Count := 1;
            Type::B:
                Count := 2;
        end;
    end;
}

---

(source_file
  (table_declaration
    object_id: (object_id (integer))
    object_name: (object_name
      name: (name))
    (oninsert_trigger
      (code_block
        (case_statement
          expression: (identifier)
          (case_branch
            pattern: (qualified_enum_value
              enum_type: (identifier)
              value: (identifier))
            statements: (assignment_statement
              left: (identifier)
              right: (integer)))
          (case_branch
            pattern: (qualified_enum_value
              enum_type: (identifier)
              value: (identifier))
            statements: (assignment_statement
              left: (identifier)
              right: (integer))))))))

==================
Case with string literals Adv
==================

table 50002 "Test Table"
{
    trigger OnInsert()
    begin
        case Code of
            'A':
                Count := 1;
            'B':
                Count := 2;
        end;
    end;
}

---

(source_file
  (table_declaration
    object_id: (object_id (integer))
    object_name: (object_name
      name: (name))
    (oninsert_trigger
      (code_block
        (case_statement
          expression: (identifier)
          (case_branch
            pattern: (string_literal)
            statements: (assignment_statement
              left: (identifier)
              right: (integer)))
          (case_branch
            pattern: (string_literal)
            statements: (assignment_statement
              left: (identifier)
              right: (integer))))))))

==================
Case with multiple patterns per branch Adv
==================

table 50003 "Test Table"
{
    trigger OnInsert()
    begin
        case Type of
            Type::A, Type::B:
                Count := 1;
            Type::C, Type::D, Type::E:
                begin
                    Count := 2;
                    Status := 'Multiple';
                end;
        end;
    end;
}

---

(source_file
  (table_declaration
    object_id: (object_id (integer))
    object_name: (object_name
      name: (name))
    (oninsert_trigger
      (code_block
        (case_statement
          expression: (identifier)
          (case_branch
            pattern: (multi_pattern
              (qualified_enum_value
                enum_type: (identifier)
                value: (identifier))
              (qualified_enum_value
                enum_type: (identifier)
                value: (identifier)))
            statements: (assignment_statement
              left: (identifier)
              right: (integer)))
          (case_branch
            pattern: (multi_pattern
              (qualified_enum_value
                enum_type: (identifier)
                value: (identifier))
              (qualified_enum_value
                enum_type: (identifier)
                value: (identifier))
              (qualified_enum_value
                enum_type: (identifier)
                value: (identifier)))
            statements: (code_block
              (assignment_statement
                left: (identifier)
                right: (integer))
              (assignment_statement
                left: (identifier)
                right: (string_literal)))))))))

==================
Case with else clause Adv
==================

table 50004 "Test Table"
{
    trigger OnInsert()
    begin
        case MyCode of
            'A':
                Count := 1;
            'B':
                Count := 2;
            else
                Count := 999;
        end;
    end;
}

---

(source_file
  (table_declaration
    object_id: (object_id (integer))
    object_name: (object_name
      name: (name))
    (oninsert_trigger
      (code_block
        (case_statement
          expression: (identifier)
          (case_branch
            pattern: (string_literal)
            statements: (assignment_statement
              left: (identifier)
              right: (integer)))
          (case_branch
            pattern: (string_literal)
            statements: (assignment_statement
              left: (identifier)
              right: (integer)))
          (else_branch
            statements: (assignment_statement
              left: (identifier)
              right: (integer))))))))

==================
Case with else block Adv
==================

table 50005 "Test Table"
{
    trigger OnInsert()
    begin
        case Status of
            Status::New:
                Count := 1;
            else begin
                Count := 0;
                Message := 'Unknown';
            end;
        end;
    end;
}

---

(source_file
  (table_declaration
    object_id: (object_id (integer))
    object_name: (object_name
      name: (name))
    (oninsert_trigger
      (code_block
        (case_statement
          expression: (identifier)
          (case_branch
            pattern: (qualified_enum_value
              enum_type: (identifier)
              value: (identifier))
            statements: (assignment_statement
              left: (identifier)
              right: (integer)))
          (else_branch
            statements: (code_block
              (assignment_statement
                left: (identifier)
                right: (integer))
              (assignment_statement
                left: (identifier)
                right: (string_literal)))))))))
