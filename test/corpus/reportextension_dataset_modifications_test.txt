================================================================================
Report extension with add and modify in dataset
================================================================================

reportextension 8008 "Contract Sales Invoice" extends "Standard Sales - Invoice"
{
    dataset
    {
        add(Header)
        {
            column(RecurringBilling; "Recurring Billing")
            {
            }
        }
        modify(Header)
        {
            trigger OnAfterAfterGetRecord()
            begin
                ProcessContractBilling();
            end;
        }
    }
}

--------------------------------------------------------------------------------

(source_file
  (reportextension_declaration
    object_id: (integer)
    object_name: (quoted_identifier)
    base_object: (quoted_identifier)
    (dataset_section
      (add_dataitem
        target: (identifier)
        (report_column_section
          name: (identifier)
          source: (quoted_identifier)))
      (modify_dataitem
        target: (identifier)
        (trigger_declaration
          name: (trigger_name)
          (code_block
            (call_expression
              function: (identifier)
              arguments: (argument_list))))))))

================================================================================
Report extension with rendering section
================================================================================

reportextension 8008 "Contract Sales Invoice" extends "Standard Sales - Invoice"
{
    rendering
    {
        layout("SalesInvoiceContract.rdlc")
        {
            Type = RDLC;
            LayoutFile = './Layouts/SalesInvoiceContract.rdlc';
            Caption = 'Sales Invoice Contract (RDLC)';
            Summary = 'Contract billing details layout.';
        }
        layout("SalesInvoiceContract.docx")
        {
            Type = Word;
            LayoutFile = './Layouts/SalesInvoiceContract.docx';
            Caption = 'Sales Invoice Contract (Word)';
            Summary = 'Simple contract layout for editing.';
        }
    }
}

--------------------------------------------------------------------------------

(source_file
  (reportextension_declaration
    object_id: (integer)
    object_name: (quoted_identifier)
    base_object: (quoted_identifier)
    (rendering_section
      (rendering_layout
        name: (quoted_identifier)
        (rendering_type_property)
        (layout_file_property
          value: (string_literal))
        (caption_property
          (string_literal))
        (summary_property
          value: (string_literal)))
      (rendering_layout
        name: (quoted_identifier)
        (rendering_type_property)
        (layout_file_property
          value: (string_literal))
        (caption_property
          (string_literal))
        (summary_property
          value: (string_literal))))))

================================================================================
Report extension with complex dataset modifications
================================================================================

reportextension 50100 "Extended Sales Report" extends "Sales Invoice"
{
    dataset
    {
        add(Line)
        {
            column(ContractLineNo; "Contract Line No.")
            {
            }
            column(ContractNo; "Contract No.")
            {
            }
        }
        addafter(ReportTotalsLine)
        {
            dataitem(ContractDetails; Integer)
            {
                MaxIteration = 1;
                DataItemTableView = sorting(Number);
                
                column(ContractNo; ContractBuffer."Contract No.") { }
                column(StartDate; ContractBuffer."Start Date") { }
            }
        }
        modify(Header)
        {
            trigger OnAfterGetRecord()
            begin
                CalcContractDetails();
            end;
        }
    }
    
    var
        ContractBuffer: Record "Contract Buffer" temporary;
        
    procedure CalcContractDetails()
    begin
        // Implementation
    end;
}

--------------------------------------------------------------------------------

(source_file
  (reportextension_declaration
    object_id: (integer)
    object_name: (quoted_identifier)
    base_object: (quoted_identifier)
    (dataset_section
      (add_dataitem
        target: (identifier)
        (report_column_section
          name: (identifier)
          source: (quoted_identifier))
        (report_column_section
          name: (identifier)
          source: (quoted_identifier)))
      (addafter_dataitem
        target: (identifier)
        (report_dataitem_section
          name: (identifier)
          table_name: (identifier)
          (max_iteration_property
            value: (integer))
          (data_item_table_view_property
            value: (source_table_view_value
              (sorting_clause
                fields: (field_reference_list
                  (field_reference
                    (identifier))))))
          (report_column_section
            name: (identifier)
            source: (field_access
              record: (identifier)
              field: (quoted_identifier)))
          (report_column_section
            name: (identifier)
            source: (field_access
              record: (identifier)
              field: (quoted_identifier)))))
      (modify_dataitem
        target: (identifier)
        (trigger_declaration
          name: (trigger_name)
          (code_block
            (call_expression
              function: (identifier)
              arguments: (argument_list))))))
    (var_section
      (variable_declaration
        name: (identifier)
        type: (type_specification
          (record_type
            reference: (quoted_identifier)))
        temporary: (temporary)))
    (procedure
      name: (name
        (identifier))
      (code_block
        (comment)))))
