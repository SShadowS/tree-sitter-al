================================================================================
StyleExpr with all expression types
================================================================================

page 50103 "Complex StyleExpr Test"
{
    layout
    {
        area(content)
        {
            field(Field1; Rec.Field1)
            {
                StyleExpr = Amount in [100..500];
            }
            field(Field2; Rec.Field2)
            {
                StyleExpr = Status is MyInterface;
            }
            field(Field3; Rec.Field3)
            {
                StyleExpr = Rec.Type as IPaymentMethod;
            }
            field(Field4; Rec.Field4)
            {
                StyleExpr = (Amount * 1.1) > MaxAmount;
            }
            field(Field5; Rec.Field5)
            {
                StyleExpr = IsApproved and (Status = Status::Released);
            }
        }
    }
}

--------------------------------------------------------------------------------

(source_file
  (page_declaration
    object_id: (integer)
    object_name: (quoted_identifier)
    (layout_section
      (area_section
        (field_section
          control_id: (identifier)
          source_or_field_name: (member_expression
            object: (identifier)
            property: (identifier))
          (style_expr_property
            left: (identifier)
            operator: (in_operator)
            right: (list_literal
              (expression_list
                (range_expression
                  left: (integer)
                  right: (integer))))))
        (field_section
          control_id: (identifier)
          source_or_field_name: (member_expression
            object: (identifier)
            property: (identifier))
          (style_expr_property
            left: (identifier)
            right: (type_specification
              (identifier))))
        (field_section
          control_id: (identifier)
          source_or_field_name: (member_expression
            object: (identifier)
            property: (identifier))
          (style_expr_property
            left: (member_expression
              object: (identifier)
              property: (identifier))
            right: (type_specification
              (identifier))))
        (field_section
          control_id: (identifier)
          source_or_field_name: (member_expression
            object: (identifier)
            property: (identifier))
          (style_expr_property
            value: (comparison_expression
              left: (parenthesized_expression
                (multiplicative_expression
                  left: (identifier)
                  right: (decimal)))
              operator: (comparison_operator)
              right: (identifier))))
        (field_section
          control_id: (identifier)
          source_or_field_name: (member_expression
            object: (identifier)
            property: (identifier))
          (style_expr_property
            value: (logical_expression
              left: (identifier)
              right: (parenthesized_expression
                (comparison_expression
                  left: (identifier)
                  operator: (comparison_operator)
                  right: (qualified_enum_value
                    enum_type: (identifier)
                    value: (identifier)))))))))))
