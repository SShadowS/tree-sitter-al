================================================================================
Page with preprocessor block containing trigger and var section
================================================================================

page 50000 "Test Page"
{
    PageType = List;
    
#if not CLEAN24
    trigger OnAfterGetRecord()
    begin
        Message('Test');
    end;
    
    var
        TestVar: Boolean;
#endif
}

--------------------------------------------------------------------------------

(source_file
  (page_declaration
    object_id: (integer)
    object_name: (quoted_identifier)
    (page_type_property)
    (preproc_conditional_mixed_content
      (preproc_if
        condition: (identifier))
      (trigger_declaration
        name: (trigger_name)
        (code_block
          (call_expression
            function: (identifier)
            arguments: (argument_list
              (string_literal)))))
      (var_section
        (variable_declaration
          name: (identifier)
          type: (type_specification
            (basic_type))))
      (preproc_endif))))

================================================================================
Page with preprocessor containing trigger with var section and variable
================================================================================

page 30114 "Shpfy Order Attributes"
{
    Caption = 'Shopify Order Attributes';
    PageType = ListPart;
    SourceTable = "Shpfy Order Attribute";

    layout
    {
        area(content)
        {
            repeater(General)
            {
                field("Key"; Rec."Key")
                {
                    ApplicationArea = All;
                    ToolTip = 'Specifies the key.';
                }
#if not CLEAN24
                field(Value; Rec.Value)
                {
                    ApplicationArea = All;
                    ToolTip = 'Specifies the value.';
                }
#endif
            }
        }
    }

#if not CLEAN24
    trigger OnAfterGetRecord()
    var
        Shop: Record "Shpfy Shop";
        OrderHeader: Record "Shpfy Order Header";
    begin
        if OrderHeader.Get(Rec."Order Id") then
            if Shop.Get(OrderHeader."Shop Code") then
                ReplaceOrderAtributeValueEnabled := Shop."Replace Order Attribute Value";
    end;

    var
        ReplaceOrderAtributeValueEnabled: Boolean;
#endif
}

--------------------------------------------------------------------------------

(source_file
  (page_declaration
    object_id: (integer)
    object_name: (quoted_identifier)
    (caption_property
      (string_literal))
    (page_type_property
      value: (identifier))
    (source_table_property
      value: (quoted_identifier))
    (layout_section
      (area_section
        (repeater_section
          name: (identifier)
          (field_section
            control_id: (quoted_identifier)
            source_or_field_name: (field_access
              record: (identifier)
              field: (quoted_identifier))
            (application_area_property
              value: (identifier))
            (tool_tip_property
              (tool_tip_value
                (string_literal))))
          (preproc_conditional_layout
            (preproc_if
              condition: (identifier))
            (field_section
              control_id: (identifier)
              source_or_field_name: (member_expression
                object: (identifier)
                property: (identifier))
              (application_area_property
                value: (identifier))
              (tool_tip_property
                (tool_tip_value
                  (string_literal))))
            (preproc_endif)))))
    (preproc_conditional_mixed_content
      (preproc_if
        condition: (identifier))
      (trigger_declaration
        name: (trigger_name)
        (var_section
          (variable_declaration
            name: (identifier)
            type: (type_specification
              (record_type
                reference: (quoted_identifier))))
          (variable_declaration
            name: (identifier)
            type: (type_specification
              (record_type
                reference: (quoted_identifier)))))
        (code_block
          (if_statement
            condition: (call_expression
              function: (member_expression
                object: (identifier)
                property: (identifier))
              arguments: (argument_list
                (field_access
                  record: (identifier)
                  field: (quoted_identifier))))
            then_branch: (if_statement
              condition: (call_expression
                function: (member_expression
                  object: (identifier)
                  property: (identifier))
                arguments: (argument_list
                  (field_access
                    record: (identifier)
                    field: (quoted_identifier))))
              then_branch: (assignment_expression
                left: (identifier)
                right: (field_access
                  record: (identifier)
                  field: (quoted_identifier)))))))
      (var_section
        (variable_declaration
          name: (identifier)
          type: (type_specification
            (basic_type))))
      (preproc_endif))))

================================================================================
Page with multiple preprocessor blocks and mixed content
================================================================================

page 50001 "Complex Page"
{
    PageType = Card;
    
#if CLEAN24
    Caption = 'New Caption';
#else
    Caption = 'Old Caption';
#endif

    layout
    {
        area(content)
        {
            field(TestField; TestField)
            {
                ApplicationArea = All;
            }
        }
    }

#if not CLEAN24
    trigger OnOpenPage()
    var
        TempVar: Integer;
    begin
        TempVar := 10;
        Message('%1', TempVar);
    end;
    
    trigger OnClosePage()
    begin
        // Cleanup code
    end;
    
    var
        GlobalVar1: Text;
        GlobalVar2: Decimal;
#endif

    procedure TestProcedure()
    begin
        // Some code
    end;
}

--------------------------------------------------------------------------------

(source_file
  (page_declaration
    object_id: (integer)
    object_name: (quoted_identifier)
    (page_type_property)
    (preproc_conditional_page_properties
      (preproc_if
        condition: (identifier))
      (caption_property
        (string_literal))
      (preproc_else)
      (caption_property
        (string_literal))
      (preproc_endif))
    (layout_section
      (area_section
        (field_section
          control_id: (identifier)
          source_or_field_name: (identifier)
          (application_area_property
            value: (identifier)))))
    (preproc_conditional_mixed_content
      (preproc_if
        condition: (identifier))
      (trigger_declaration
        name: (trigger_name)
        (var_section
          (variable_declaration
            name: (identifier)
            type: (type_specification
              (basic_type))))
        (code_block
          (assignment_expression
            left: (identifier)
            right: (integer))
          (call_expression
            function: (identifier)
            arguments: (argument_list
              (string_literal)
              (identifier)))))
      (trigger_declaration
        name: (trigger_name)
        (code_block
          (comment)))
      (var_section
        (variable_declaration
          name: (identifier)
          type: (type_specification
            (text_type)))
        (variable_declaration
          name: (identifier)
          type: (type_specification
            (basic_type))))
      (preproc_endif))
    (procedure
      name: (name
        (identifier))
      (code_block
        (comment)))))
